{
  "worlds": [
    {
      "name": "imports",
      "imports": {
        "interface-0": {
          "interface": 0
        },
        "interface-1": {
          "interface": 1
        }
      },
      "exports": {},
      "package": 0
    },
    {
      "name": "imports",
      "imports": {
        "interface-0": {
          "interface": 0
        },
        "interface-2": {
          "interface": 2
        },
        "interface-3": {
          "interface": 3
        },
        "interface-4": {
          "interface": 4
        }
      },
      "exports": {},
      "package": 1
    },
    {
      "name": "imports",
      "imports": {
        "interface-0": {
          "interface": 0
        },
        "interface-1": {
          "interface": 1
        },
        "interface-3": {
          "interface": 3
        },
        "interface-5": {
          "interface": 5
        },
        "interface-6": {
          "interface": 6
        }
      },
      "exports": {},
      "package": 2
    },
    {
      "name": "imports",
      "imports": {
        "interface-7": {
          "interface": 7
        },
        "interface-8": {
          "interface": 8
        },
        "interface-0": {
          "interface": 0
        },
        "interface-12": {
          "interface": 12
        },
        "interface-13": {
          "interface": 13
        },
        "interface-1": {
          "interface": 1
        },
        "interface-10": {
          "interface": 10
        },
        "interface-11": {
          "interface": 11
        },
        "interface-9": {
          "interface": 9
        }
      },
      "exports": {},
      "package": 3
    },
    {
      "name": "imports",
      "imports": {
        "interface-16": {
          "interface": 16
        },
        "interface-15": {
          "interface": 15
        },
        "interface-14": {
          "interface": 14
        }
      },
      "exports": {},
      "package": 4
    },
    {
      "name": "reactor",
      "imports": {
        "interface-3": {
          "interface": 3
        },
        "interface-0": {
          "interface": 0
        },
        "interface-2": {
          "interface": 2
        },
        "interface-4": {
          "interface": 4
        },
        "interface-1": {
          "interface": 1
        },
        "interface-5": {
          "interface": 5
        },
        "interface-6": {
          "interface": 6
        },
        "interface-7": {
          "interface": 7
        },
        "interface-8": {
          "interface": 8
        },
        "interface-9": {
          "interface": 9
        },
        "interface-10": {
          "interface": 10
        },
        "interface-11": {
          "interface": 11
        },
        "interface-12": {
          "interface": 12
        },
        "interface-13": {
          "interface": 13
        },
        "interface-16": {
          "interface": 16
        },
        "interface-15": {
          "interface": 15
        },
        "interface-14": {
          "interface": 14
        },
        "interface-17": {
          "interface": 17
        },
        "interface-18": {
          "interface": 18
        },
        "interface-20": {
          "interface": 20
        },
        "interface-21": {
          "interface": 21
        },
        "interface-22": {
          "interface": 22
        },
        "interface-23": {
          "interface": 23
        },
        "interface-24": {
          "interface": 24
        },
        "interface-25": {
          "interface": 25
        },
        "interface-26": {
          "interface": 26
        },
        "interface-27": {
          "interface": 27
        }
      },
      "exports": {},
      "package": 5
    },
    {
      "name": "command",
      "imports": {
        "interface-3": {
          "interface": 3
        },
        "interface-0": {
          "interface": 0
        },
        "interface-2": {
          "interface": 2
        },
        "interface-4": {
          "interface": 4
        },
        "interface-1": {
          "interface": 1
        },
        "interface-5": {
          "interface": 5
        },
        "interface-6": {
          "interface": 6
        },
        "interface-7": {
          "interface": 7
        },
        "interface-8": {
          "interface": 8
        },
        "interface-9": {
          "interface": 9
        },
        "interface-10": {
          "interface": 10
        },
        "interface-11": {
          "interface": 11
        },
        "interface-12": {
          "interface": 12
        },
        "interface-13": {
          "interface": 13
        },
        "interface-16": {
          "interface": 16
        },
        "interface-15": {
          "interface": 15
        },
        "interface-14": {
          "interface": 14
        },
        "interface-17": {
          "interface": 17
        },
        "interface-18": {
          "interface": 18
        },
        "interface-20": {
          "interface": 20
        },
        "interface-21": {
          "interface": 21
        },
        "interface-22": {
          "interface": 22
        },
        "interface-23": {
          "interface": 23
        },
        "interface-24": {
          "interface": 24
        },
        "interface-25": {
          "interface": 25
        },
        "interface-26": {
          "interface": 26
        },
        "interface-27": {
          "interface": 27
        }
      },
      "exports": {
        "interface-19": {
          "interface": 19
        }
      },
      "package": 5
    },
    {
      "name": "proxy",
      "imports": {
        "interface-3": {
          "interface": 3
        },
        "interface-0": {
          "interface": 0
        },
        "interface-2": {
          "interface": 2
        },
        "interface-4": {
          "interface": 4
        },
        "interface-16": {
          "interface": 16
        },
        "interface-1": {
          "interface": 1
        },
        "interface-21": {
          "interface": 21
        },
        "interface-22": {
          "interface": 22
        },
        "interface-20": {
          "interface": 20
        },
        "interface-28": {
          "interface": 28
        },
        "interface-30": {
          "interface": 30
        }
      },
      "exports": {
        "interface-29": {
          "interface": 29
        }
      },
      "package": 6
    },
    {
      "name": "imports",
      "imports": {
        "interface-31": {
          "interface": 31
        }
      },
      "exports": {},
      "package": 7
    },
    {
      "name": "command-extended",
      "imports": {
        "interface-3": {
          "interface": 3
        },
        "interface-0": {
          "interface": 0
        },
        "interface-2": {
          "interface": 2
        },
        "interface-4": {
          "interface": 4
        },
        "interface-1": {
          "interface": 1
        },
        "interface-5": {
          "interface": 5
        },
        "interface-6": {
          "interface": 6
        },
        "interface-7": {
          "interface": 7
        },
        "interface-8": {
          "interface": 8
        },
        "interface-9": {
          "interface": 9
        },
        "interface-10": {
          "interface": 10
        },
        "interface-11": {
          "interface": 11
        },
        "interface-12": {
          "interface": 12
        },
        "interface-13": {
          "interface": 13
        },
        "interface-16": {
          "interface": 16
        },
        "interface-15": {
          "interface": 15
        },
        "interface-14": {
          "interface": 14
        },
        "interface-17": {
          "interface": 17
        },
        "interface-18": {
          "interface": 18
        },
        "interface-20": {
          "interface": 20
        },
        "interface-21": {
          "interface": 21
        },
        "interface-22": {
          "interface": 22
        },
        "interface-23": {
          "interface": 23
        },
        "interface-24": {
          "interface": 24
        },
        "interface-25": {
          "interface": 25
        },
        "interface-26": {
          "interface": 26
        },
        "interface-27": {
          "interface": 27
        },
        "interface-31": {
          "interface": 31
        },
        "interface-28": {
          "interface": 28
        },
        "interface-30": {
          "interface": 30
        }
      },
      "exports": {},
      "package": 8
    },
    {
      "name": "preview1-adapter-reactor",
      "imports": {
        "interface-3": {
          "interface": 3
        },
        "interface-0": {
          "interface": 0
        },
        "interface-2": {
          "interface": 2
        },
        "interface-4": {
          "interface": 4
        },
        "interface-1": {
          "interface": 1
        },
        "interface-5": {
          "interface": 5
        },
        "interface-6": {
          "interface": 6
        },
        "interface-7": {
          "interface": 7
        },
        "interface-8": {
          "interface": 8
        },
        "interface-9": {
          "interface": 9
        },
        "interface-10": {
          "interface": 10
        },
        "interface-11": {
          "interface": 11
        },
        "interface-12": {
          "interface": 12
        },
        "interface-13": {
          "interface": 13
        },
        "interface-16": {
          "interface": 16
        },
        "interface-15": {
          "interface": 15
        },
        "interface-14": {
          "interface": 14
        },
        "interface-17": {
          "interface": 17
        },
        "interface-18": {
          "interface": 18
        },
        "interface-20": {
          "interface": 20
        },
        "interface-21": {
          "interface": 21
        },
        "interface-22": {
          "interface": 22
        },
        "interface-23": {
          "interface": 23
        },
        "interface-24": {
          "interface": 24
        },
        "interface-25": {
          "interface": 25
        },
        "interface-26": {
          "interface": 26
        },
        "interface-27": {
          "interface": 27
        }
      },
      "exports": {},
      "package": 8
    },
    {
      "name": "test-reactor",
      "imports": {
        "interface-17": {
          "interface": 17
        },
        "interface-0": {
          "interface": 0
        },
        "interface-1": {
          "interface": 1
        },
        "interface-3": {
          "interface": 3
        },
        "interface-5": {
          "interface": 5
        },
        "interface-6": {
          "interface": 6
        },
        "interface-18": {
          "interface": 18
        },
        "output-stream": {
          "type": 251
        },
        "descriptor-stat": {
          "type": 252
        }
      },
      "exports": {
        "add-strings": {
          "function": {
            "name": "add-strings",
            "kind": "freestanding",
            "params": [
              {
                "name": "s",
                "type": 253
              }
            ],
            "results": [
              {
                "type": "u32"
              }
            ]
          }
        },
        "get-strings": {
          "function": {
            "name": "get-strings",
            "kind": "freestanding",
            "params": [],
            "results": [
              {
                "type": 253
              }
            ]
          }
        },
        "write-strings-to": {
          "function": {
            "name": "write-strings-to",
            "kind": "freestanding",
            "params": [
              {
                "name": "o",
                "type": 255
              }
            ],
            "results": [
              {
                "type": 254
              }
            ]
          }
        },
        "pass-an-imported-record": {
          "function": {
            "name": "pass-an-imported-record",
            "kind": "freestanding",
            "params": [
              {
                "name": "d",
                "type": 252
              }
            ],
            "results": [
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "package": 8
    },
    {
      "name": "test-command",
      "imports": {
        "interface-0": {
          "interface": 0
        },
        "interface-1": {
          "interface": 1
        },
        "interface-17": {
          "interface": 17
        },
        "interface-20": {
          "interface": 20
        },
        "interface-21": {
          "interface": 21
        },
        "interface-22": {
          "interface": 22
        }
      },
      "exports": {},
      "package": 8
    },
    {
      "name": "test-command-with-sockets",
      "imports": {
        "interface-0": {
          "interface": 0
        },
        "interface-1": {
          "interface": 1
        },
        "interface-17": {
          "interface": 17
        },
        "interface-20": {
          "interface": 20
        },
        "interface-21": {
          "interface": 21
        },
        "interface-22": {
          "interface": 22
        },
        "interface-7": {
          "interface": 7
        },
        "interface-10": {
          "interface": 10
        },
        "interface-11": {
          "interface": 11
        },
        "interface-8": {
          "interface": 8
        },
        "interface-9": {
          "interface": 9
        },
        "interface-2": {
          "interface": 2
        }
      },
      "exports": {},
      "package": 8
    }
  ],
  "interfaces": [
    {
      "name": "poll",
      "types": {
        "pollable": 0
      },
      "functions": {
        "poll-list": {
          "name": "poll-list",
          "kind": "freestanding",
          "params": [
            {
              "name": "in",
              "type": 2
            }
          ],
          "results": [
            {
              "type": 3
            }
          ],
          "docs": {
            "contents": "Poll for completion on a set of pollables.\n\nThis function takes a list of pollables, which identify I/O sources of\ninterest, and waits until one or more of the events is ready for I/O.\n\nThe result `list<u32>` contains one or more indices of handles in the\nargument list that is ready for I/O.\n\nIf the list contains more elements than can be indexed with a `u32`\nvalue, this function traps.\n\nA timeout can be implemented by adding a pollable from the\nwasi-clocks API to the list.\n\nThis function does not return a `result`; polling in itself does not\ndo any I/O so it doesn't fail. If any of the I/O sources identified by\nthe pollables has an error, it is indicated by marking the source as\nbeing reaedy for I/O."
          }
        },
        "poll-one": {
          "name": "poll-one",
          "kind": "freestanding",
          "params": [
            {
              "name": "in",
              "type": 1
            }
          ],
          "results": [],
          "docs": {
            "contents": "Poll for completion on a single pollable.\n\nThis function is similar to `poll-list`, but operates on only a single\npollable. When it returns, the handle is ready for I/O."
          }
        }
      },
      "docs": {
        "contents": "A poll API intended to let users wait for I/O events on multiple handles\nat once."
      },
      "package": 0
    },
    {
      "name": "streams",
      "types": {
        "pollable": 4,
        "error": 5,
        "stream-error": 7,
        "input-stream": 8,
        "output-stream": 9
      },
      "functions": {
        "[method]error.to-debug-string": {
          "name": "[method]error.to-debug-string",
          "kind": {
            "method": 5
          },
          "params": [
            {
              "name": "self",
              "type": 10
            }
          ],
          "results": [
            {
              "type": "string"
            }
          ],
          "docs": {
            "contents": "Returns a string that's suitable to assist humans in debugging this\nerror.\n\nThe returned string will change across platforms and hosts which\nmeans that parsing it, for example, would be a\nplatform-compatibility hazard."
          }
        },
        "[method]input-stream.read": {
          "name": "[method]input-stream.read",
          "kind": {
            "method": 8
          },
          "params": [
            {
              "name": "self",
              "type": 11
            },
            {
              "name": "len",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 13
            }
          ],
          "docs": {
            "contents": "Perform a non-blocking read from the stream.\n\nThis function returns a list of bytes containing the data that was\nread, along with a `stream-status` which, indicates whether further\nreads are expected to produce data. The returned list will contain up to\n`len` bytes; it may return fewer than requested, but not more. An\nempty list and `stream-status:open` indicates no more data is\navailable at this time, and that the pollable given by `subscribe`\nwill be ready when more data is available.\n\nOnce a stream has reached the end, subsequent calls to `read` or\n`skip` will always report `stream-status:ended` rather than producing more\ndata.\n\nWhen the caller gives a `len` of 0, it represents a request to read 0\nbytes. This read should  always succeed and return an empty list and\nthe current `stream-status`.\n\nThe `len` parameter is a `u64`, which could represent a list of u8 which\nis not possible to allocate in wasm32, or not desirable to allocate as\nas a return value by the callee. The callee may return a list of bytes\nless than `len` in size while more bytes are available for reading."
          }
        },
        "[method]input-stream.blocking-read": {
          "name": "[method]input-stream.blocking-read",
          "kind": {
            "method": 8
          },
          "params": [
            {
              "name": "self",
              "type": 11
            },
            {
              "name": "len",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 13
            }
          ],
          "docs": {
            "contents": "Read bytes from a stream, after blocking until at least one byte can\nbe read. Except for blocking, identical to `read`."
          }
        },
        "[method]input-stream.skip": {
          "name": "[method]input-stream.skip",
          "kind": {
            "method": 8
          },
          "params": [
            {
              "name": "self",
              "type": 11
            },
            {
              "name": "len",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 14
            }
          ],
          "docs": {
            "contents": "Skip bytes from a stream.\n\nThis is similar to the `read` function, but avoids copying the\nbytes into the instance.\n\nOnce a stream has reached the end, subsequent calls to read or\n`skip` will always report end-of-stream rather than producing more\ndata.\n\nThis function returns the number of bytes skipped, along with a\n`stream-status` indicating whether the end of the stream was\nreached. The returned value will be at most `len`; it may be less."
          }
        },
        "[method]input-stream.blocking-skip": {
          "name": "[method]input-stream.blocking-skip",
          "kind": {
            "method": 8
          },
          "params": [
            {
              "name": "self",
              "type": 11
            },
            {
              "name": "len",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 14
            }
          ],
          "docs": {
            "contents": "Skip bytes from a stream, after blocking until at least one byte\ncan be skipped. Except for blocking behavior, identical to `skip`."
          }
        },
        "[method]input-stream.subscribe": {
          "name": "[method]input-stream.subscribe",
          "kind": {
            "method": 8
          },
          "params": [
            {
              "name": "self",
              "type": 11
            }
          ],
          "results": [
            {
              "type": 17
            }
          ],
          "docs": {
            "contents": "Create a `pollable` which will resolve once either the specified stream\nhas bytes available to read or the other end of the stream has been\nclosed.\nThe created `pollable` is a child resource of the `input-stream`.\nImplementations may trap if the `input-stream` is dropped before\nall derived `pollable`s created with this function are dropped."
          }
        },
        "[method]output-stream.check-write": {
          "name": "[method]output-stream.check-write",
          "kind": {
            "method": 9
          },
          "params": [
            {
              "name": "self",
              "type": 15
            }
          ],
          "results": [
            {
              "type": 14
            }
          ],
          "docs": {
            "contents": "Check readiness for writing. This function never blocks.\n\nReturns the number of bytes permitted for the next call to `write`,\nor an error. Calling `write` with more bytes than this function has\npermitted will trap.\n\nWhen this function returns 0 bytes, the `subscribe` pollable will\nbecome ready when this function will report at least 1 byte, or an\nerror."
          }
        },
        "[method]output-stream.write": {
          "name": "[method]output-stream.write",
          "kind": {
            "method": 9
          },
          "params": [
            {
              "name": "self",
              "type": 15
            },
            {
              "name": "contents",
              "type": 12
            }
          ],
          "results": [
            {
              "type": 16
            }
          ],
          "docs": {
            "contents": "Perform a write. This function never blocks.\n\nPrecondition: check-write gave permit of Ok(n) and contents has a\nlength of less than or equal to n. Otherwise, this function will trap.\n\nreturns Err(closed) without writing if the stream has closed since\nthe last call to check-write provided a permit."
          }
        },
        "[method]output-stream.blocking-write-and-flush": {
          "name": "[method]output-stream.blocking-write-and-flush",
          "kind": {
            "method": 9
          },
          "params": [
            {
              "name": "self",
              "type": 15
            },
            {
              "name": "contents",
              "type": 12
            }
          ],
          "results": [
            {
              "type": 16
            }
          ],
          "docs": {
            "contents": "Perform a write of up to 4096 bytes, and then flush the stream. Block\nuntil all of these operations are complete, or an error occurs.\n\nThis is a convenience wrapper around the use of `check-write`,\n`subscribe`, `write`, and `flush`, and is implemented with the\nfollowing pseudo-code:\n\n```text\nlet pollable = this.subscribe();\nwhile !contents.is_empty() {\n// Wait for the stream to become writable\npoll-one(pollable);\nlet Ok(n) = this.check-write(); // eliding error handling\nlet len = min(n, contents.len());\nlet (chunk, rest) = contents.split_at(len);\nthis.write(chunk  );            // eliding error handling\ncontents = rest;\n}\nthis.flush();\n// Wait for completion of `flush`\npoll-one(pollable);\n// Check for any errors that arose during `flush`\nlet _ = this.check-write();         // eliding error handling\n```"
          }
        },
        "[method]output-stream.flush": {
          "name": "[method]output-stream.flush",
          "kind": {
            "method": 9
          },
          "params": [
            {
              "name": "self",
              "type": 15
            }
          ],
          "results": [
            {
              "type": 16
            }
          ],
          "docs": {
            "contents": "Request to flush buffered output. This function never blocks.\n\nThis tells the output-stream that the caller intends any buffered\noutput to be flushed. the output which is expected to be flushed\nis all that has been passed to `write` prior to this call.\n\nUpon calling this function, the `output-stream` will not accept any\nwrites (`check-write` will return `ok(0)`) until the flush has\ncompleted. The `subscribe` pollable will become ready when the\nflush has completed and the stream can accept more writes."
          }
        },
        "[method]output-stream.blocking-flush": {
          "name": "[method]output-stream.blocking-flush",
          "kind": {
            "method": 9
          },
          "params": [
            {
              "name": "self",
              "type": 15
            }
          ],
          "results": [
            {
              "type": 16
            }
          ],
          "docs": {
            "contents": "Request to flush buffered output, and block until flush completes\nand stream is ready for writing again."
          }
        },
        "[method]output-stream.subscribe": {
          "name": "[method]output-stream.subscribe",
          "kind": {
            "method": 9
          },
          "params": [
            {
              "name": "self",
              "type": 15
            }
          ],
          "results": [
            {
              "type": 17
            }
          ],
          "docs": {
            "contents": "Create a `pollable` which will resolve once the output-stream\nis ready for more writing, or an error has occured. When this\npollable is ready, `check-write` will return `ok(n)` with n>0, or an\nerror.\n\nIf the stream is closed, this pollable is always ready immediately.\n\nThe created `pollable` is a child resource of the `output-stream`.\nImplementations may trap if the `output-stream` is dropped before\nall derived `pollable`s created with this function are dropped."
          }
        },
        "[method]output-stream.write-zeroes": {
          "name": "[method]output-stream.write-zeroes",
          "kind": {
            "method": 9
          },
          "params": [
            {
              "name": "self",
              "type": 15
            },
            {
              "name": "len",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 16
            }
          ],
          "docs": {
            "contents": "Write zeroes to a stream.\n\nthis should be used precisely like `write` with the exact same\npreconditions (must use check-write first), but instead of\npassing a list of bytes, you simply pass the number of zero-bytes\nthat should be written."
          }
        },
        "[method]output-stream.blocking-write-zeroes-and-flush": {
          "name": "[method]output-stream.blocking-write-zeroes-and-flush",
          "kind": {
            "method": 9
          },
          "params": [
            {
              "name": "self",
              "type": 15
            },
            {
              "name": "len",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 16
            }
          ],
          "docs": {
            "contents": "Perform a write of up to 4096 zeroes, and then flush the stream.\nBlock until all of these operations are complete, or an error\noccurs.\n\nThis is a convenience wrapper around the use of `check-write`,\n`subscribe`, `write-zeroes`, and `flush`, and is implemented with\nthe following pseudo-code:\n\n```text\nlet pollable = this.subscribe();\nwhile num_zeroes != 0 {\n// Wait for the stream to become writable\npoll-one(pollable);\nlet Ok(n) = this.check-write(); // eliding error handling\nlet len = min(n, num_zeroes);\nthis.write-zeroes(len);         // eliding error handling\nnum_zeroes -= len;\n}\nthis.flush();\n// Wait for completion of `flush`\npoll-one(pollable);\n// Check for any errors that arose during `flush`\nlet _ = this.check-write();         // eliding error handling\n```"
          }
        },
        "[method]output-stream.splice": {
          "name": "[method]output-stream.splice",
          "kind": {
            "method": 9
          },
          "params": [
            {
              "name": "self",
              "type": 15
            },
            {
              "name": "src",
              "type": 18
            },
            {
              "name": "len",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 14
            }
          ],
          "docs": {
            "contents": "Read from one stream and write to another.\n\nThis function returns the number of bytes transferred; it may be less\nthan `len`.\n\nUnlike other I/O functions, this function blocks until all the data\nread from the input stream has been written to the output stream."
          }
        },
        "[method]output-stream.blocking-splice": {
          "name": "[method]output-stream.blocking-splice",
          "kind": {
            "method": 9
          },
          "params": [
            {
              "name": "self",
              "type": 15
            },
            {
              "name": "src",
              "type": 18
            },
            {
              "name": "len",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 14
            }
          ],
          "docs": {
            "contents": "Read from one stream and write to another, with blocking.\n\nThis is similar to `splice`, except that it blocks until at least\none byte can be read."
          }
        },
        "[method]output-stream.forward": {
          "name": "[method]output-stream.forward",
          "kind": {
            "method": 9
          },
          "params": [
            {
              "name": "self",
              "type": 15
            },
            {
              "name": "src",
              "type": 18
            }
          ],
          "results": [
            {
              "type": 14
            }
          ],
          "docs": {
            "contents": "Forward the entire contents of an input stream to an output stream.\n\nThis function repeatedly reads from the input stream and writes\nthe data to the output stream, until the end of the input stream\nis reached, or an error is encountered.\n\nUnlike other I/O functions, this function blocks until the end\nof the input stream is seen and all the data has been written to\nthe output stream.\n\nThis function returns the number of bytes transferred, and the status of\nthe output stream."
          }
        }
      },
      "docs": {
        "contents": "WASI I/O is an I/O abstraction API which is currently focused on providing\nstream types.\n\nIn the future, the component model is expected to add built-in stream types;\nwhen it does, they are expected to subsume this API."
      },
      "package": 0
    },
    {
      "name": "monotonic-clock",
      "types": {
        "pollable": 19,
        "instant": 20
      },
      "functions": {
        "now": {
          "name": "now",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 20
            }
          ],
          "docs": {
            "contents": "Read the current value of the clock.\n\nThe clock is monotonic, therefore calling this function repeatedly will\nproduce a sequence of non-decreasing values."
          }
        },
        "resolution": {
          "name": "resolution",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 20
            }
          ],
          "docs": {
            "contents": "Query the resolution of the clock."
          }
        },
        "subscribe": {
          "name": "subscribe",
          "kind": "freestanding",
          "params": [
            {
              "name": "when",
              "type": 20
            },
            {
              "name": "absolute",
              "type": "bool"
            }
          ],
          "results": [
            {
              "type": 24
            }
          ],
          "docs": {
            "contents": "Create a `pollable` which will resolve once the specified time has been\nreached."
          }
        }
      },
      "docs": {
        "contents": "WASI Monotonic Clock is a clock API intended to let users measure elapsed\ntime.\n\nIt is intended to be portable at least between Unix-family platforms and\nWindows.\n\nA monotonic clock is a clock which has an unspecified initial value, and\nsuccessive reads of the clock will produce non-decreasing values.\n\nIt is intended for measuring elapsed time."
      },
      "package": 1
    },
    {
      "name": "wall-clock",
      "types": {
        "datetime": 21
      },
      "functions": {
        "now": {
          "name": "now",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 21
            }
          ],
          "docs": {
            "contents": "Read the current value of the clock.\n\nThis clock is not monotonic, therefore calling this function repeatedly\nwill not necessarily produce a sequence of non-decreasing values.\n\nThe returned timestamps represent the number of seconds since\n1970-01-01T00:00:00Z, also known as [POSIX's Seconds Since the Epoch],\nalso known as [Unix Time].\n\nThe nanoseconds field of the output is always less than 1000000000.\n\n[POSIX's Seconds Since the Epoch]: https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xbd_chap04.html#tag_21_04_16\n[Unix Time]: https://en.wikipedia.org/wiki/Unix_time"
          }
        },
        "resolution": {
          "name": "resolution",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 21
            }
          ],
          "docs": {
            "contents": "Query the resolution of the clock.\n\nThe nanoseconds field of the output is always less than 1000000000."
          }
        }
      },
      "docs": {
        "contents": "WASI Wall Clock is a clock API intended to let users query the current\ntime. The name \"wall\" makes an analogy to a \"clock on the wall\", which\nis not necessarily monotonic as it may be reset.\n\nIt is intended to be portable at least between Unix-family platforms and\nWindows.\n\nA wall clock is a clock which measures the date and time according to\nsome external reference.\n\nExternal references may be reset, so this clock is not necessarily\nmonotonic, making it unsuitable for measuring elapsed time.\n\nIt is intended for reporting the current date and time for humans."
      },
      "package": 1
    },
    {
      "name": "timezone",
      "types": {
        "datetime": 22,
        "timezone-display": 23
      },
      "functions": {
        "display": {
          "name": "display",
          "kind": "freestanding",
          "params": [
            {
              "name": "when",
              "type": 22
            }
          ],
          "results": [
            {
              "type": 23
            }
          ],
          "docs": {
            "contents": "Return information needed to display the given `datetime`. This includes\nthe UTC offset, the time zone name, and a flag indicating whether\ndaylight saving time is active.\n\nIf the timezone cannot be determined for the given `datetime`, return a\n`timezone-display` for `UTC` with a `utc-offset` of 0 and no daylight\nsaving time."
          }
        },
        "utc-offset": {
          "name": "utc-offset",
          "kind": "freestanding",
          "params": [
            {
              "name": "when",
              "type": 22
            }
          ],
          "results": [
            {
              "type": "s32"
            }
          ],
          "docs": {
            "contents": "The same as `display`, but only return the UTC offset."
          }
        }
      },
      "package": 1
    },
    {
      "name": "types",
      "types": {
        "input-stream": 25,
        "output-stream": 26,
        "error": 27,
        "datetime": 28,
        "filesize": 29,
        "descriptor-type": 30,
        "descriptor-flags": 31,
        "path-flags": 32,
        "open-flags": 33,
        "modes": 34,
        "access-type": 35,
        "link-count": 36,
        "descriptor-stat": 38,
        "new-timestamp": 39,
        "directory-entry": 40,
        "error-code": 41,
        "advice": 42,
        "metadata-hash-value": 43,
        "descriptor": 44,
        "directory-entry-stream": 45
      },
      "functions": {
        "[method]descriptor.read-via-stream": {
          "name": "[method]descriptor.read-via-stream",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "offset",
              "type": 29
            }
          ],
          "results": [
            {
              "type": 48
            }
          ],
          "docs": {
            "contents": "Return a stream for reading from a file, if available.\n\nMay fail with an error-code describing why the file cannot be read.\n\nMultiple read, write, and append streams may be active on the same open\nfile and they do not interfere with each other.\n\nNote: This allows using `read-stream`, which is similar to `read` in POSIX."
          }
        },
        "[method]descriptor.write-via-stream": {
          "name": "[method]descriptor.write-via-stream",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "offset",
              "type": 29
            }
          ],
          "results": [
            {
              "type": 50
            }
          ],
          "docs": {
            "contents": "Return a stream for writing to a file, if available.\n\nMay fail with an error-code describing why the file cannot be written.\n\nNote: This allows using `write-stream`, which is similar to `write` in\nPOSIX."
          }
        },
        "[method]descriptor.append-via-stream": {
          "name": "[method]descriptor.append-via-stream",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            }
          ],
          "results": [
            {
              "type": 50
            }
          ],
          "docs": {
            "contents": "Return a stream for appending to a file, if available.\n\nMay fail with an error-code describing why the file cannot be appended.\n\nNote: This allows using `write-stream`, which is similar to `write` with\n`O_APPEND` in in POSIX."
          }
        },
        "[method]descriptor.advise": {
          "name": "[method]descriptor.advise",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "offset",
              "type": 29
            },
            {
              "name": "length",
              "type": 29
            },
            {
              "name": "advice",
              "type": 42
            }
          ],
          "results": [
            {
              "type": 51
            }
          ],
          "docs": {
            "contents": "Provide file advisory information on a descriptor.\n\nThis is similar to `posix_fadvise` in POSIX."
          }
        },
        "[method]descriptor.sync-data": {
          "name": "[method]descriptor.sync-data",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            }
          ],
          "results": [
            {
              "type": 51
            }
          ],
          "docs": {
            "contents": "Synchronize the data of a file to disk.\n\nThis function succeeds with no effect if the file descriptor is not\nopened for writing.\n\nNote: This is similar to `fdatasync` in POSIX."
          }
        },
        "[method]descriptor.get-flags": {
          "name": "[method]descriptor.get-flags",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            }
          ],
          "results": [
            {
              "type": 52
            }
          ],
          "docs": {
            "contents": "Get flags associated with a descriptor.\n\nNote: This returns similar flags to `fcntl(fd, F_GETFL)` in POSIX.\n\nNote: This returns the value that was the `fs_flags` value returned\nfrom `fdstat_get` in earlier versions of WASI."
          }
        },
        "[method]descriptor.get-type": {
          "name": "[method]descriptor.get-type",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            }
          ],
          "results": [
            {
              "type": 53
            }
          ],
          "docs": {
            "contents": "Get the dynamic type of a descriptor.\n\nNote: This returns the same value as the `type` field of the `fd-stat`\nreturned by `stat`, `stat-at` and similar.\n\nNote: This returns similar flags to the `st_mode & S_IFMT` value provided\nby `fstat` in POSIX.\n\nNote: This returns the value that was the `fs_filetype` value returned\nfrom `fdstat_get` in earlier versions of WASI."
          }
        },
        "[method]descriptor.set-size": {
          "name": "[method]descriptor.set-size",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "size",
              "type": 29
            }
          ],
          "results": [
            {
              "type": 51
            }
          ],
          "docs": {
            "contents": "Adjust the size of an open file. If this increases the file's size, the\nextra bytes are filled with zeros.\n\nNote: This was called `fd_filestat_set_size` in earlier versions of WASI."
          }
        },
        "[method]descriptor.set-times": {
          "name": "[method]descriptor.set-times",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "data-access-timestamp",
              "type": 39
            },
            {
              "name": "data-modification-timestamp",
              "type": 39
            }
          ],
          "results": [
            {
              "type": 51
            }
          ],
          "docs": {
            "contents": "Adjust the timestamps of an open file or directory.\n\nNote: This is similar to `futimens` in POSIX.\n\nNote: This was called `fd_filestat_set_times` in earlier versions of WASI."
          }
        },
        "[method]descriptor.read": {
          "name": "[method]descriptor.read",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "length",
              "type": 29
            },
            {
              "name": "offset",
              "type": 29
            }
          ],
          "results": [
            {
              "type": 56
            }
          ],
          "docs": {
            "contents": "Read from a descriptor, without using and updating the descriptor's offset.\n\nThis function returns a list of bytes containing the data that was\nread, along with a bool which, when true, indicates that the end of the\nfile was reached. The returned list will contain up to `length` bytes; it\nmay return fewer than requested, if the end of the file is reached or\nif the I/O operation is interrupted.\n\nIn the future, this may change to return a `stream<u8, error-code>`.\n\nNote: This is similar to `pread` in POSIX."
          }
        },
        "[method]descriptor.write": {
          "name": "[method]descriptor.write",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "buffer",
              "type": 54
            },
            {
              "name": "offset",
              "type": 29
            }
          ],
          "results": [
            {
              "type": 57
            }
          ],
          "docs": {
            "contents": "Write to a descriptor, without using and updating the descriptor's offset.\n\nIt is valid to write past the end of a file; the file is extended to the\nextent of the write, with bytes between the previous end and the start of\nthe write set to zero.\n\nIn the future, this may change to take a `stream<u8, error-code>`.\n\nNote: This is similar to `pwrite` in POSIX."
          }
        },
        "[method]descriptor.read-directory": {
          "name": "[method]descriptor.read-directory",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            }
          ],
          "results": [
            {
              "type": 59
            }
          ],
          "docs": {
            "contents": "Read directory entries from a directory.\n\nOn filesystems where directories contain entries referring to themselves\nand their parents, often named `.` and `..` respectively, these entries\nare omitted.\n\nThis always returns a new stream which starts at the beginning of the\ndirectory. Multiple streams may be active on the same directory, and they\ndo not interfere with each other."
          }
        },
        "[method]descriptor.sync": {
          "name": "[method]descriptor.sync",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            }
          ],
          "results": [
            {
              "type": 51
            }
          ],
          "docs": {
            "contents": "Synchronize the data and metadata of a file to disk.\n\nThis function succeeds with no effect if the file descriptor is not\nopened for writing.\n\nNote: This is similar to `fsync` in POSIX."
          }
        },
        "[method]descriptor.create-directory-at": {
          "name": "[method]descriptor.create-directory-at",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "path",
              "type": "string"
            }
          ],
          "results": [
            {
              "type": 51
            }
          ],
          "docs": {
            "contents": "Create a directory.\n\nNote: This is similar to `mkdirat` in POSIX."
          }
        },
        "[method]descriptor.stat": {
          "name": "[method]descriptor.stat",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            }
          ],
          "results": [
            {
              "type": 60
            }
          ],
          "docs": {
            "contents": "Return the attributes of an open file or directory.\n\nNote: This is similar to `fstat` in POSIX, except that it does not return\ndevice and inode information. For testing whether two descriptors refer to\nthe same underlying filesystem object, use `is-same-object`. To obtain\nadditional data that can be used do determine whether a file has been\nmodified, use `metadata-hash`.\n\nNote: This was called `fd_filestat_get` in earlier versions of WASI."
          }
        },
        "[method]descriptor.stat-at": {
          "name": "[method]descriptor.stat-at",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "path-flags",
              "type": 32
            },
            {
              "name": "path",
              "type": "string"
            }
          ],
          "results": [
            {
              "type": 60
            }
          ],
          "docs": {
            "contents": "Return the attributes of a file or directory.\n\nNote: This is similar to `fstatat` in POSIX, except that it does not\nreturn device and inode information. See the `stat` description for a\ndiscussion of alternatives.\n\nNote: This was called `path_filestat_get` in earlier versions of WASI."
          }
        },
        "[method]descriptor.set-times-at": {
          "name": "[method]descriptor.set-times-at",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "path-flags",
              "type": 32
            },
            {
              "name": "path",
              "type": "string"
            },
            {
              "name": "data-access-timestamp",
              "type": 39
            },
            {
              "name": "data-modification-timestamp",
              "type": 39
            }
          ],
          "results": [
            {
              "type": 51
            }
          ],
          "docs": {
            "contents": "Adjust the timestamps of a file or directory.\n\nNote: This is similar to `utimensat` in POSIX.\n\nNote: This was called `path_filestat_set_times` in earlier versions of\nWASI."
          }
        },
        "[method]descriptor.link-at": {
          "name": "[method]descriptor.link-at",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "old-path-flags",
              "type": 32
            },
            {
              "name": "old-path",
              "type": "string"
            },
            {
              "name": "new-descriptor",
              "type": 46
            },
            {
              "name": "new-path",
              "type": "string"
            }
          ],
          "results": [
            {
              "type": 51
            }
          ],
          "docs": {
            "contents": "Create a hard link.\n\nNote: This is similar to `linkat` in POSIX."
          }
        },
        "[method]descriptor.open-at": {
          "name": "[method]descriptor.open-at",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "path-flags",
              "type": 32
            },
            {
              "name": "path",
              "type": "string"
            },
            {
              "name": "open-flags",
              "type": 33
            },
            {
              "name": "flags",
              "type": 31
            },
            {
              "name": "modes",
              "type": 34
            }
          ],
          "results": [
            {
              "type": 62
            }
          ],
          "docs": {
            "contents": "Open a file or directory.\n\nThe returned descriptor is not guaranteed to be the lowest-numbered\ndescriptor not currently open/ it is randomized to prevent applications\nfrom depending on making assumptions about indexes, since this is\nerror-prone in multi-threaded contexts. The returned descriptor is\nguaranteed to be less than 2**31.\n\nIf `flags` contains `descriptor-flags::mutate-directory`, and the base\ndescriptor doesn't have `descriptor-flags::mutate-directory` set,\n`open-at` fails with `error-code::read-only`.\n\nIf `flags` contains `write` or `mutate-directory`, or `open-flags`\ncontains `truncate` or `create`, and the base descriptor doesn't have\n`descriptor-flags::mutate-directory` set, `open-at` fails with\n`error-code::read-only`.\n\nNote: This is similar to `openat` in POSIX."
          }
        },
        "[method]descriptor.readlink-at": {
          "name": "[method]descriptor.readlink-at",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "path",
              "type": "string"
            }
          ],
          "results": [
            {
              "type": 63
            }
          ],
          "docs": {
            "contents": "Read the contents of a symbolic link.\n\nIf the contents contain an absolute or rooted path in the underlying\nfilesystem, this function fails with `error-code::not-permitted`.\n\nNote: This is similar to `readlinkat` in POSIX."
          }
        },
        "[method]descriptor.remove-directory-at": {
          "name": "[method]descriptor.remove-directory-at",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "path",
              "type": "string"
            }
          ],
          "results": [
            {
              "type": 51
            }
          ],
          "docs": {
            "contents": "Remove a directory.\n\nReturn `error-code::not-empty` if the directory is not empty.\n\nNote: This is similar to `unlinkat(fd, path, AT_REMOVEDIR)` in POSIX."
          }
        },
        "[method]descriptor.rename-at": {
          "name": "[method]descriptor.rename-at",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "old-path",
              "type": "string"
            },
            {
              "name": "new-descriptor",
              "type": 46
            },
            {
              "name": "new-path",
              "type": "string"
            }
          ],
          "results": [
            {
              "type": 51
            }
          ],
          "docs": {
            "contents": "Rename a filesystem object.\n\nNote: This is similar to `renameat` in POSIX."
          }
        },
        "[method]descriptor.symlink-at": {
          "name": "[method]descriptor.symlink-at",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "old-path",
              "type": "string"
            },
            {
              "name": "new-path",
              "type": "string"
            }
          ],
          "results": [
            {
              "type": 51
            }
          ],
          "docs": {
            "contents": "Create a symbolic link (also known as a \"symlink\").\n\nIf `old-path` starts with `/`, the function fails with\n`error-code::not-permitted`.\n\nNote: This is similar to `symlinkat` in POSIX."
          }
        },
        "[method]descriptor.access-at": {
          "name": "[method]descriptor.access-at",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "path-flags",
              "type": 32
            },
            {
              "name": "path",
              "type": "string"
            },
            {
              "name": "type",
              "type": 35
            }
          ],
          "results": [
            {
              "type": 51
            }
          ],
          "docs": {
            "contents": "Check accessibility of a filesystem path.\n\nCheck whether the given filesystem path names an object which is\nreadable, writable, or executable, or whether it exists.\n\nThis does not a guarantee that subsequent accesses will succeed, as\nfilesystem permissions may be modified asynchronously by external\nentities.\n\nNote: This is similar to `faccessat` with the `AT_EACCESS` flag in POSIX."
          }
        },
        "[method]descriptor.unlink-file-at": {
          "name": "[method]descriptor.unlink-file-at",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "path",
              "type": "string"
            }
          ],
          "results": [
            {
              "type": 51
            }
          ],
          "docs": {
            "contents": "Unlink a filesystem object that is not a directory.\n\nReturn `error-code::is-directory` if the path refers to a directory.\nNote: This is similar to `unlinkat(fd, path, 0)` in POSIX."
          }
        },
        "[method]descriptor.change-file-permissions-at": {
          "name": "[method]descriptor.change-file-permissions-at",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "path-flags",
              "type": 32
            },
            {
              "name": "path",
              "type": "string"
            },
            {
              "name": "modes",
              "type": 34
            }
          ],
          "results": [
            {
              "type": 51
            }
          ],
          "docs": {
            "contents": "Change the permissions of a filesystem object that is not a directory.\n\nNote that the ultimate meanings of these permissions is\nfilesystem-specific.\n\nNote: This is similar to `fchmodat` in POSIX."
          }
        },
        "[method]descriptor.change-directory-permissions-at": {
          "name": "[method]descriptor.change-directory-permissions-at",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "path-flags",
              "type": 32
            },
            {
              "name": "path",
              "type": "string"
            },
            {
              "name": "modes",
              "type": 34
            }
          ],
          "results": [
            {
              "type": 51
            }
          ],
          "docs": {
            "contents": "Change the permissions of a directory.\n\nNote that the ultimate meanings of these permissions is\nfilesystem-specific.\n\nUnlike in POSIX, the `executable` flag is not reinterpreted as a \"search\"\nflag. `read` on a directory implies readability and searchability, and\n`execute` is not valid for directories.\n\nNote: This is similar to `fchmodat` in POSIX."
          }
        },
        "[method]descriptor.lock-shared": {
          "name": "[method]descriptor.lock-shared",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            }
          ],
          "results": [
            {
              "type": 51
            }
          ],
          "docs": {
            "contents": "Request a shared advisory lock for an open file.\n\nThis requests a *shared* lock; more than one shared lock can be held for\na file at the same time.\n\nIf the open file has an exclusive lock, this function downgrades the lock\nto a shared lock. If it has a shared lock, this function has no effect.\n\nThis requests an *advisory* lock, meaning that the file could be accessed\nby other programs that don't hold the lock.\n\nIt is unspecified how shared locks interact with locks acquired by\nnon-WASI programs.\n\nThis function blocks until the lock can be acquired.\n\nNot all filesystems support locking; on filesystems which don't support\nlocking, this function returns `error-code::unsupported`.\n\nNote: This is similar to `flock(fd, LOCK_SH)` in Unix."
          }
        },
        "[method]descriptor.lock-exclusive": {
          "name": "[method]descriptor.lock-exclusive",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            }
          ],
          "results": [
            {
              "type": 51
            }
          ],
          "docs": {
            "contents": "Request an exclusive advisory lock for an open file.\n\nThis requests an *exclusive* lock; no other locks may be held for the\nfile while an exclusive lock is held.\n\nIf the open file has a shared lock and there are no exclusive locks held\nfor the file, this function upgrades the lock to an exclusive lock. If the\nopen file already has an exclusive lock, this function has no effect.\n\nThis requests an *advisory* lock, meaning that the file could be accessed\nby other programs that don't hold the lock.\n\nIt is unspecified whether this function succeeds if the file descriptor\nis not opened for writing. It is unspecified how exclusive locks interact\nwith locks acquired by non-WASI programs.\n\nThis function blocks until the lock can be acquired.\n\nNot all filesystems support locking; on filesystems which don't support\nlocking, this function returns `error-code::unsupported`.\n\nNote: This is similar to `flock(fd, LOCK_EX)` in Unix."
          }
        },
        "[method]descriptor.try-lock-shared": {
          "name": "[method]descriptor.try-lock-shared",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            }
          ],
          "results": [
            {
              "type": 51
            }
          ],
          "docs": {
            "contents": "Request a shared advisory lock for an open file.\n\nThis requests a *shared* lock; more than one shared lock can be held for\na file at the same time.\n\nIf the open file has an exclusive lock, this function downgrades the lock\nto a shared lock. If it has a shared lock, this function has no effect.\n\nThis requests an *advisory* lock, meaning that the file could be accessed\nby other programs that don't hold the lock.\n\nIt is unspecified how shared locks interact with locks acquired by\nnon-WASI programs.\n\nThis function returns `error-code::would-block` if the lock cannot be\nacquired.\n\nNot all filesystems support locking; on filesystems which don't support\nlocking, this function returns `error-code::unsupported`.\n\nNote: This is similar to `flock(fd, LOCK_SH | LOCK_NB)` in Unix."
          }
        },
        "[method]descriptor.try-lock-exclusive": {
          "name": "[method]descriptor.try-lock-exclusive",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            }
          ],
          "results": [
            {
              "type": 51
            }
          ],
          "docs": {
            "contents": "Request an exclusive advisory lock for an open file.\n\nThis requests an *exclusive* lock; no other locks may be held for the\nfile while an exclusive lock is held.\n\nIf the open file has a shared lock and there are no exclusive locks held\nfor the file, this function upgrades the lock to an exclusive lock. If the\nopen file already has an exclusive lock, this function has no effect.\n\nThis requests an *advisory* lock, meaning that the file could be accessed\nby other programs that don't hold the lock.\n\nIt is unspecified whether this function succeeds if the file descriptor\nis not opened for writing. It is unspecified how exclusive locks interact\nwith locks acquired by non-WASI programs.\n\nThis function returns `error-code::would-block` if the lock cannot be\nacquired.\n\nNot all filesystems support locking; on filesystems which don't support\nlocking, this function returns `error-code::unsupported`.\n\nNote: This is similar to `flock(fd, LOCK_EX | LOCK_NB)` in Unix."
          }
        },
        "[method]descriptor.unlock": {
          "name": "[method]descriptor.unlock",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            }
          ],
          "results": [
            {
              "type": 51
            }
          ],
          "docs": {
            "contents": "Release a shared or exclusive lock on an open file.\n\nNote: This is similar to `flock(fd, LOCK_UN)` in Unix."
          }
        },
        "[method]descriptor.is-same-object": {
          "name": "[method]descriptor.is-same-object",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "other",
              "type": 46
            }
          ],
          "results": [
            {
              "type": "bool"
            }
          ],
          "docs": {
            "contents": "Test whether two descriptors refer to the same filesystem object.\n\nIn POSIX, this corresponds to testing whether the two descriptors have the\nsame device (`st_dev`) and inode (`st_ino` or `d_ino`) numbers.\nwasi-filesystem does not expose device and inode numbers, so this function\nmay be used instead."
          }
        },
        "[method]descriptor.metadata-hash": {
          "name": "[method]descriptor.metadata-hash",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            }
          ],
          "results": [
            {
              "type": 64
            }
          ],
          "docs": {
            "contents": "Return a hash of the metadata associated with a filesystem object referred\nto by a descriptor.\n\nThis returns a hash of the last-modification timestamp and file size, and\nmay also include the inode number, device number, birth timestamp, and\nother metadata fields that may change when the file is modified or\nreplaced. It may also include a secret value chosen by the\nimplementation and not otherwise exposed.\n\nImplementations are encourated to provide the following properties:\n\n- If the file is not modified or replaced, the computed hash value should\nusually not change.\n- If the object is modified or replaced, the computed hash value should\nusually change.\n- The inputs to the hash should not be easily computable from the\ncomputed hash.\n\nHowever, none of these is required."
          }
        },
        "[method]descriptor.metadata-hash-at": {
          "name": "[method]descriptor.metadata-hash-at",
          "kind": {
            "method": 44
          },
          "params": [
            {
              "name": "self",
              "type": 46
            },
            {
              "name": "path-flags",
              "type": 32
            },
            {
              "name": "path",
              "type": "string"
            }
          ],
          "results": [
            {
              "type": 64
            }
          ],
          "docs": {
            "contents": "Return a hash of the metadata associated with a filesystem object referred\nto by a directory descriptor and a relative path.\n\nThis performs the same hash computation as `metadata-hash`."
          }
        },
        "[method]directory-entry-stream.read-directory-entry": {
          "name": "[method]directory-entry-stream.read-directory-entry",
          "kind": {
            "method": 45
          },
          "params": [
            {
              "name": "self",
              "type": 65
            }
          ],
          "results": [
            {
              "type": 67
            }
          ],
          "docs": {
            "contents": "Read a single directory entry from a `directory-entry-stream`."
          }
        },
        "filesystem-error-code": {
          "name": "filesystem-error-code",
          "kind": "freestanding",
          "params": [
            {
              "name": "err",
              "type": 68
            }
          ],
          "results": [
            {
              "type": 69
            }
          ],
          "docs": {
            "contents": "Attempts to extract a filesystem-related `error-code` from the stream\n`error` provided.\n\nStream operations which return `stream-error::last-operation-failed`\nhave a payload with more information about the operation that failed.\nThis payload can be passed through to this function to see if there's\nfilesystem-related information about the error to return.\n\nNote that this function is fallible because not all stream-related\nerrors are filesystem-related errors."
          }
        }
      },
      "docs": {
        "contents": "WASI filesystem is a filesystem API primarily intended to let users run WASI\nprograms that access their files on their existing filesystems, without\nsignificant overhead.\n\nIt is intended to be roughly portable between Unix-family platforms and\nWindows, though it does not hide many of the major differences.\n\nPaths are passed as interface-type `string`s, meaning they must consist of\na sequence of Unicode Scalar Values (USVs). Some filesystems may contain\npaths which are not accessible by this API.\n\nThe directory separator in WASI is always the forward-slash (`/`).\n\nAll paths in WASI are relative paths, and are interpreted relative to a\n`descriptor` referring to a base directory. If a `path` argument to any WASI\nfunction starts with `/`, or if any step of resolving a `path`, including\n`..` and symbolic link steps, reaches a directory outside of the base\ndirectory, or reaches a symlink to an absolute or rooted path in the\nunderlying filesystem, the function fails with `error-code::not-permitted`.\n\nFor more information about WASI path resolution and sandboxing, see\n[WASI filesystem path resolution].\n\n[WASI filesystem path resolution]: https://github.com/WebAssembly/wasi-filesystem/blob/main/path-resolution.md"
      },
      "package": 2
    },
    {
      "name": "preopens",
      "types": {
        "descriptor": 70
      },
      "functions": {
        "get-directories": {
          "name": "get-directories",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 73
            }
          ],
          "docs": {
            "contents": "Return the set of preopened directories, and their path."
          }
        }
      },
      "package": 2
    },
    {
      "name": "network",
      "types": {
        "network": 74,
        "error-code": 75,
        "ip-address-family": 76,
        "ipv4-address": 77,
        "ipv6-address": 78,
        "ip-address": 79,
        "ipv4-socket-address": 80,
        "ipv6-socket-address": 81,
        "ip-socket-address": 82
      },
      "functions": {},
      "package": 3
    },
    {
      "name": "instance-network",
      "types": {
        "network": 83
      },
      "functions": {
        "instance-network": {
          "name": "instance-network",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 149
            }
          ],
          "docs": {
            "contents": "Get a handle to the default network."
          }
        }
      },
      "docs": {
        "contents": "This interface provides a value-export of the default network handle.."
      },
      "package": 3
    },
    {
      "name": "ip-name-lookup",
      "types": {
        "pollable": 84,
        "network": 85,
        "error-code": 86,
        "ip-address": 87,
        "ip-address-family": 88,
        "resolve-address-stream": 89
      },
      "functions": {
        "resolve-addresses": {
          "name": "resolve-addresses",
          "kind": "freestanding",
          "params": [
            {
              "name": "network",
              "type": 90
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "address-family",
              "type": 91
            },
            {
              "name": "include-unavailable",
              "type": "bool"
            }
          ],
          "results": [
            {
              "type": 93
            }
          ],
          "docs": {
            "contents": "Resolve an internet host name to a list of IP addresses.\n\nSee the wasi-socket proposal README.md for a comparison with getaddrinfo.\n\n# Parameters\n- `name`: The name to look up. IP addresses are not allowed. Unicode domain names are automatically converted\nto ASCII using IDNA encoding.\n- `address-family`: If provided, limit the results to addresses of this specific address family.\n- `include-unavailable`: When set to true, this function will also return addresses of which the runtime\nthinks (or knows) can't be connected to at the moment. For example, this will return IPv6 addresses on\nsystems without an active IPv6 interface. Notes:\n- Even when no public IPv6 interfaces are present or active, names like \"localhost\" can still resolve to an IPv6 address.\n- Whatever is \"available\" or \"unavailable\" is volatile and can change everytime a network cable is unplugged.\n\nThis function never blocks. It either immediately fails or immediately returns successfully with a `resolve-address-stream`\nthat can be used to (asynchronously) fetch the results.\n\nAt the moment, the stream never completes successfully with 0 items. Ie. the first call\nto `resolve-next-address` never returns `ok(none)`. This may change in the future.\n\n# Typical errors\n- `invalid-name`:                 `name` is a syntactically invalid domain name.\n- `invalid-name`:                 `name` is an IP address.\n- `address-family-not-supported`: The specified `address-family` is not supported. (EAI_FAMILY)\n\n# References:\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/getaddrinfo.html>\n- <https://man7.org/linux/man-pages/man3/getaddrinfo.3.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/ws2tcpip/nf-ws2tcpip-getaddrinfo>\n- <https://man.freebsd.org/cgi/man.cgi?query=getaddrinfo&sektion=3>"
          }
        },
        "[method]resolve-address-stream.resolve-next-address": {
          "name": "[method]resolve-address-stream.resolve-next-address",
          "kind": {
            "method": 89
          },
          "params": [
            {
              "name": "self",
              "type": 94
            }
          ],
          "results": [
            {
              "type": 96
            }
          ],
          "docs": {
            "contents": "Returns the next address from the resolver.\n\nThis function should be called multiple times. On each call, it will\nreturn the next address in connection order preference. If all\naddresses have been exhausted, this function returns `none`.\n\nThis function never returns IPv4-mapped IPv6 addresses.\n\n# Typical errors\n- `name-unresolvable`:          Name does not exist or has no suitable associated IP addresses. (EAI_NONAME, EAI_NODATA, EAI_ADDRFAMILY)\n- `temporary-resolver-failure`: A temporary failure in name resolution occurred. (EAI_AGAIN)\n- `permanent-resolver-failure`: A permanent failure in name resolution occurred. (EAI_FAIL)\n- `would-block`:                A result is not available yet. (EWOULDBLOCK, EAGAIN)"
          }
        },
        "[method]resolve-address-stream.subscribe": {
          "name": "[method]resolve-address-stream.subscribe",
          "kind": {
            "method": 89
          },
          "params": [
            {
              "name": "self",
              "type": 94
            }
          ],
          "results": [
            {
              "type": 150
            }
          ],
          "docs": {
            "contents": "Create a `pollable` which will resolve once the stream is ready for I/O.\n\nNote: this function is here for WASI Preview2 only.\nIt's planned to be removed when `future` is natively supported in Preview3."
          }
        }
      },
      "package": 3
    },
    {
      "name": "tcp",
      "types": {
        "input-stream": 97,
        "output-stream": 98,
        "pollable": 99,
        "network": 100,
        "error-code": 101,
        "ip-socket-address": 102,
        "ip-address-family": 103,
        "shutdown-type": 104,
        "tcp-socket": 105
      },
      "functions": {
        "[method]tcp-socket.start-bind": {
          "name": "[method]tcp-socket.start-bind",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            },
            {
              "name": "network",
              "type": 107
            },
            {
              "name": "local-address",
              "type": 102
            }
          ],
          "results": [
            {
              "type": 108
            }
          ],
          "docs": {
            "contents": "Bind the socket to a specific network on the provided IP address and port.\n\nIf the IP address is zero (`0.0.0.0` in IPv4, `::` in IPv6), it is left to the implementation to decide which\nnetwork interface(s) to bind to.\nIf the TCP/UDP port is zero, the socket will be bound to a random free port.\n\nWhen a socket is not explicitly bound, the first invocation to a listen or connect operation will\nimplicitly bind the socket.\n\nUnlike in POSIX, this function is async. This enables interactive WASI hosts to inject permission prompts.\n\n# Typical `start` errors\n- `address-family-mismatch`:   The `local-address` has the wrong address family. (EINVAL)\n- `already-bound`:             The socket is already bound. (EINVAL)\n- `concurrency-conflict`:      Another `bind`, `connect` or `listen` operation is already in progress. (EALREADY)\n\n# Typical `finish` errors\n- `ephemeral-ports-exhausted`: No ephemeral ports available. (EADDRINUSE, ENOBUFS on Windows)\n- `address-in-use`:            Address is already in use. (EADDRINUSE)\n- `address-not-bindable`:      `local-address` is not an address that the `network` can bind to. (EADDRNOTAVAIL)\n- `not-in-progress`:           A `bind` operation is not in progress.\n- `would-block`:               Can't finish the operation, it is still in progress. (EWOULDBLOCK, EAGAIN)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/bind.html>\n- <https://man7.org/linux/man-pages/man2/bind.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-bind>\n- <https://man.freebsd.org/cgi/man.cgi?query=bind&sektion=2&format=html>"
          }
        },
        "[method]tcp-socket.finish-bind": {
          "name": "[method]tcp-socket.finish-bind",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            }
          ],
          "results": [
            {
              "type": 108
            }
          ]
        },
        "[method]tcp-socket.start-connect": {
          "name": "[method]tcp-socket.start-connect",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            },
            {
              "name": "network",
              "type": 107
            },
            {
              "name": "remote-address",
              "type": 102
            }
          ],
          "results": [
            {
              "type": 108
            }
          ],
          "docs": {
            "contents": "Connect to a remote endpoint.\n\nOn success:\n- the socket is transitioned into the Connection state\n- a pair of streams is returned that can be used to read & write to the connection\n\n# Typical `start` errors\n- `address-family-mismatch`:   The `remote-address` has the wrong address family. (EAFNOSUPPORT)\n- `invalid-remote-address`:    The IP address in `remote-address` is set to INADDR_ANY (`0.0.0.0` / `::`). (EADDRNOTAVAIL on Windows)\n- `invalid-remote-address`:    The port in `remote-address` is set to 0. (EADDRNOTAVAIL on Windows)\n- `already-attached`:          The socket is already attached to a different network. The `network` passed to `connect` must be identical to the one passed to `bind`.\n- `already-connected`:         The socket is already in the Connection state. (EISCONN)\n- `already-listening`:         The socket is already in the Listener state. (EOPNOTSUPP, EINVAL on Windows)\n- `concurrency-conflict`:      Another `bind`, `connect` or `listen` operation is already in progress. (EALREADY)\n\n# Typical `finish` errors\n- `timeout`:                   Connection timed out. (ETIMEDOUT)\n- `connection-refused`:        The connection was forcefully rejected. (ECONNREFUSED)\n- `connection-reset`:          The connection was reset. (ECONNRESET)\n- `remote-unreachable`:        The remote address is not reachable. (EHOSTUNREACH, EHOSTDOWN, ENETUNREACH, ENETDOWN)\n- `ephemeral-ports-exhausted`: Tried to perform an implicit bind, but there were no ephemeral ports available. (EADDRINUSE, EADDRNOTAVAIL on Linux, EAGAIN on BSD)\n- `not-in-progress`:           A `connect` operation is not in progress.\n- `would-block`:               Can't finish the operation, it is still in progress. (EWOULDBLOCK, EAGAIN)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/connect.html>\n- <https://man7.org/linux/man-pages/man2/connect.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-connect>\n- <https://man.freebsd.org/cgi/man.cgi?connect>"
          }
        },
        "[method]tcp-socket.finish-connect": {
          "name": "[method]tcp-socket.finish-connect",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            }
          ],
          "results": [
            {
              "type": 112
            }
          ]
        },
        "[method]tcp-socket.start-listen": {
          "name": "[method]tcp-socket.start-listen",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            }
          ],
          "results": [
            {
              "type": 108
            }
          ],
          "docs": {
            "contents": "Start listening for new connections.\n\nTransitions the socket into the Listener state.\n\nUnlike POSIX:\n- this function is async. This enables interactive WASI hosts to inject permission prompts.\n- the socket must already be explicitly bound.\n\n# Typical `start` errors\n- `not-bound`:                 The socket is not bound to any local address. (EDESTADDRREQ)\n- `already-connected`:         The socket is already in the Connection state. (EISCONN, EINVAL on BSD)\n- `already-listening`:         The socket is already in the Listener state.\n- `concurrency-conflict`:      Another `bind`, `connect` or `listen` operation is already in progress. (EINVAL on BSD)\n\n# Typical `finish` errors\n- `ephemeral-ports-exhausted`: Tried to perform an implicit bind, but there were no ephemeral ports available. (EADDRINUSE)\n- `not-in-progress`:           A `listen` operation is not in progress.\n- `would-block`:               Can't finish the operation, it is still in progress. (EWOULDBLOCK, EAGAIN)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/listen.html>\n- <https://man7.org/linux/man-pages/man2/listen.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-listen>\n- <https://man.freebsd.org/cgi/man.cgi?query=listen&sektion=2>"
          }
        },
        "[method]tcp-socket.finish-listen": {
          "name": "[method]tcp-socket.finish-listen",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            }
          ],
          "results": [
            {
              "type": 108
            }
          ]
        },
        "[method]tcp-socket.accept": {
          "name": "[method]tcp-socket.accept",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            }
          ],
          "results": [
            {
              "type": 115
            }
          ],
          "docs": {
            "contents": "Accept a new client socket.\n\nThe returned socket is bound and in the Connection state.\n\nOn success, this function returns the newly accepted client socket along with\na pair of streams that can be used to read & write to the connection.\n\n# Typical errors\n- `not-listening`: Socket is not in the Listener state. (EINVAL)\n- `would-block`:   No pending connections at the moment. (EWOULDBLOCK, EAGAIN)\n\nHost implementations must skip over transient errors returned by the native accept syscall.\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/accept.html>\n- <https://man7.org/linux/man-pages/man2/accept.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-accept>\n- <https://man.freebsd.org/cgi/man.cgi?query=accept&sektion=2>"
          }
        },
        "[method]tcp-socket.local-address": {
          "name": "[method]tcp-socket.local-address",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            }
          ],
          "results": [
            {
              "type": 116
            }
          ],
          "docs": {
            "contents": "Get the bound local address.\n\n# Typical errors\n- `not-bound`: The socket is not bound to any local address.\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/getsockname.html>\n- <https://man7.org/linux/man-pages/man2/getsockname.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-getsockname>\n- <https://man.freebsd.org/cgi/man.cgi?getsockname>"
          }
        },
        "[method]tcp-socket.remote-address": {
          "name": "[method]tcp-socket.remote-address",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            }
          ],
          "results": [
            {
              "type": 116
            }
          ],
          "docs": {
            "contents": "Get the bound remote address.\n\n# Typical errors\n- `not-connected`: The socket is not connected to a remote address. (ENOTCONN)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/getpeername.html>\n- <https://man7.org/linux/man-pages/man2/getpeername.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-getpeername>\n- <https://man.freebsd.org/cgi/man.cgi?query=getpeername&sektion=2&n=1>"
          }
        },
        "[method]tcp-socket.address-family": {
          "name": "[method]tcp-socket.address-family",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            }
          ],
          "results": [
            {
              "type": 103
            }
          ],
          "docs": {
            "contents": "Whether this is a IPv4 or IPv6 socket.\n\nEquivalent to the SO_DOMAIN socket option."
          }
        },
        "[method]tcp-socket.ipv6-only": {
          "name": "[method]tcp-socket.ipv6-only",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            }
          ],
          "results": [
            {
              "type": 117
            }
          ],
          "docs": {
            "contents": "Whether IPv4 compatibility (dual-stack) mode is disabled or not.\n\nEquivalent to the IPV6_V6ONLY socket option.\n\n# Typical errors\n- `ipv6-only-operation`:  (get/set) `this` socket is an IPv4 socket.\n- `already-bound`:        (set) The socket is already bound.\n- `not-supported`:        (set) Host does not support dual-stack sockets. (Implementations are not required to.)\n- `concurrency-conflict`: (set) A `bind`, `connect` or `listen` operation is already in progress. (EALREADY)"
          }
        },
        "[method]tcp-socket.set-ipv6-only": {
          "name": "[method]tcp-socket.set-ipv6-only",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            },
            {
              "name": "value",
              "type": "bool"
            }
          ],
          "results": [
            {
              "type": 108
            }
          ]
        },
        "[method]tcp-socket.set-listen-backlog-size": {
          "name": "[method]tcp-socket.set-listen-backlog-size",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            },
            {
              "name": "value",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 108
            }
          ],
          "docs": {
            "contents": "Hints the desired listen queue size. Implementations are free to ignore this.\n\n# Typical errors\n- `already-connected`:    (set) The socket is already in the Connection state.\n- `concurrency-conflict`: (set) A `bind`, `connect` or `listen` operation is already in progress. (EALREADY)"
          }
        },
        "[method]tcp-socket.keep-alive": {
          "name": "[method]tcp-socket.keep-alive",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            }
          ],
          "results": [
            {
              "type": 117
            }
          ],
          "docs": {
            "contents": "Equivalent to the SO_KEEPALIVE socket option.\n\n# Typical errors\n- `concurrency-conflict`: (set) A `bind`, `connect` or `listen` operation is already in progress. (EALREADY)"
          }
        },
        "[method]tcp-socket.set-keep-alive": {
          "name": "[method]tcp-socket.set-keep-alive",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            },
            {
              "name": "value",
              "type": "bool"
            }
          ],
          "results": [
            {
              "type": 108
            }
          ]
        },
        "[method]tcp-socket.no-delay": {
          "name": "[method]tcp-socket.no-delay",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            }
          ],
          "results": [
            {
              "type": 117
            }
          ],
          "docs": {
            "contents": "Equivalent to the TCP_NODELAY socket option.\n\n# Typical errors\n- `concurrency-conflict`: (set) A `bind`, `connect` or `listen` operation is already in progress. (EALREADY)"
          }
        },
        "[method]tcp-socket.set-no-delay": {
          "name": "[method]tcp-socket.set-no-delay",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            },
            {
              "name": "value",
              "type": "bool"
            }
          ],
          "results": [
            {
              "type": 108
            }
          ]
        },
        "[method]tcp-socket.unicast-hop-limit": {
          "name": "[method]tcp-socket.unicast-hop-limit",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            }
          ],
          "results": [
            {
              "type": 118
            }
          ],
          "docs": {
            "contents": "Equivalent to the IP_TTL & IPV6_UNICAST_HOPS socket options.\n\n# Typical errors\n- `already-connected`:    (set) The socket is already in the Connection state.\n- `already-listening`:    (set) The socket is already in the Listener state.\n- `concurrency-conflict`: (set) A `bind`, `connect` or `listen` operation is already in progress. (EALREADY)"
          }
        },
        "[method]tcp-socket.set-unicast-hop-limit": {
          "name": "[method]tcp-socket.set-unicast-hop-limit",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            },
            {
              "name": "value",
              "type": "u8"
            }
          ],
          "results": [
            {
              "type": 108
            }
          ]
        },
        "[method]tcp-socket.receive-buffer-size": {
          "name": "[method]tcp-socket.receive-buffer-size",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            }
          ],
          "results": [
            {
              "type": 119
            }
          ],
          "docs": {
            "contents": "The kernel buffer space reserved for sends/receives on this socket.\n\nNote #1: an implementation may choose to cap or round the buffer size when setting the value.\nIn other words, after setting a value, reading the same setting back may return a different value.\n\nNote #2: there is not necessarily a direct relationship between the kernel buffer size and the bytes of\nactual data to be sent/received by the application, because the kernel might also use the buffer space\nfor internal metadata structures.\n\nEquivalent to the SO_RCVBUF and SO_SNDBUF socket options.\n\n# Typical errors\n- `already-connected`:    (set) The socket is already in the Connection state.\n- `already-listening`:    (set) The socket is already in the Listener state.\n- `concurrency-conflict`: (set) A `bind`, `connect` or `listen` operation is already in progress. (EALREADY)"
          }
        },
        "[method]tcp-socket.set-receive-buffer-size": {
          "name": "[method]tcp-socket.set-receive-buffer-size",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            },
            {
              "name": "value",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 108
            }
          ]
        },
        "[method]tcp-socket.send-buffer-size": {
          "name": "[method]tcp-socket.send-buffer-size",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            }
          ],
          "results": [
            {
              "type": 119
            }
          ]
        },
        "[method]tcp-socket.set-send-buffer-size": {
          "name": "[method]tcp-socket.set-send-buffer-size",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            },
            {
              "name": "value",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 108
            }
          ]
        },
        "[method]tcp-socket.subscribe": {
          "name": "[method]tcp-socket.subscribe",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            }
          ],
          "results": [
            {
              "type": 151
            }
          ],
          "docs": {
            "contents": "Create a `pollable` which will resolve once the socket is ready for I/O.\n\nNote: this function is here for WASI Preview2 only.\nIt's planned to be removed when `future` is natively supported in Preview3."
          }
        },
        "[method]tcp-socket.shutdown": {
          "name": "[method]tcp-socket.shutdown",
          "kind": {
            "method": 105
          },
          "params": [
            {
              "name": "self",
              "type": 106
            },
            {
              "name": "shutdown-type",
              "type": 104
            }
          ],
          "results": [
            {
              "type": 108
            }
          ],
          "docs": {
            "contents": "Initiate a graceful shutdown.\n\n- receive: the socket is not expecting to receive any more data from the peer. All subsequent read\noperations on the `input-stream` associated with this socket will return an End Of Stream indication.\nAny data still in the receive queue at time of calling `shutdown` will be discarded.\n- send: the socket is not expecting to send any more data to the peer. All subsequent write\noperations on the `output-stream` associated with this socket will return an error.\n- both: same effect as receive & send combined.\n\nThe shutdown function does not close (drop) the socket.\n\n# Typical errors\n- `not-connected`: The socket is not in the Connection state. (ENOTCONN)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/shutdown.html>\n- <https://man7.org/linux/man-pages/man2/shutdown.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-shutdown>\n- <https://man.freebsd.org/cgi/man.cgi?query=shutdown&sektion=2>"
          }
        }
      },
      "package": 3
    },
    {
      "name": "tcp-create-socket",
      "types": {
        "network": 120,
        "error-code": 121,
        "ip-address-family": 122,
        "tcp-socket": 123
      },
      "functions": {
        "create-tcp-socket": {
          "name": "create-tcp-socket",
          "kind": "freestanding",
          "params": [
            {
              "name": "address-family",
              "type": 122
            }
          ],
          "results": [
            {
              "type": 125
            }
          ],
          "docs": {
            "contents": "Create a new TCP socket.\n\nSimilar to `socket(AF_INET or AF_INET6, SOCK_STREAM, IPPROTO_TCP)` in POSIX.\n\nThis function does not require a network capability handle. This is considered to be safe because\nat time of creation, the socket is not bound to any `network` yet. Up to the moment `bind`/`listen`/`connect`\nis called, the socket is effectively an in-memory configuration object, unable to communicate with the outside world.\n\nAll sockets are non-blocking. Use the wasi-poll interface to block on asynchronous operations.\n\n# Typical errors\n- `not-supported`:                The host does not support TCP sockets. (EOPNOTSUPP)\n- `address-family-not-supported`: The specified `address-family` is not supported. (EAFNOSUPPORT)\n- `new-socket-limit`:             The new socket resource could not be created because of a system limit. (EMFILE, ENFILE)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/socket.html>\n- <https://man7.org/linux/man-pages/man2/socket.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-wsasocketw>\n- <https://man.freebsd.org/cgi/man.cgi?query=socket&sektion=2>"
          }
        }
      },
      "package": 3
    },
    {
      "name": "udp",
      "types": {
        "pollable": 126,
        "network": 127,
        "error-code": 128,
        "ip-socket-address": 129,
        "ip-address-family": 130,
        "datagram": 132,
        "udp-socket": 133
      },
      "functions": {
        "[method]udp-socket.start-bind": {
          "name": "[method]udp-socket.start-bind",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 134
            },
            {
              "name": "network",
              "type": 135
            },
            {
              "name": "local-address",
              "type": 129
            }
          ],
          "results": [
            {
              "type": 136
            }
          ],
          "docs": {
            "contents": "Bind the socket to a specific network on the provided IP address and port.\n\nIf the IP address is zero (`0.0.0.0` in IPv4, `::` in IPv6), it is left to the implementation to decide which\nnetwork interface(s) to bind to.\nIf the TCP/UDP port is zero, the socket will be bound to a random free port.\n\nWhen a socket is not explicitly bound, the first invocation to connect will implicitly bind the socket.\n\nUnlike in POSIX, this function is async. This enables interactive WASI hosts to inject permission prompts.\n\n# Typical `start` errors\n- `address-family-mismatch`:   The `local-address` has the wrong address family. (EINVAL)\n- `already-bound`:             The socket is already bound. (EINVAL)\n- `concurrency-conflict`:      Another `bind` or `connect` operation is already in progress. (EALREADY)\n\n# Typical `finish` errors\n- `ephemeral-ports-exhausted`: No ephemeral ports available. (EADDRINUSE, ENOBUFS on Windows)\n- `address-in-use`:            Address is already in use. (EADDRINUSE)\n- `address-not-bindable`:      `local-address` is not an address that the `network` can bind to. (EADDRNOTAVAIL)\n- `not-in-progress`:           A `bind` operation is not in progress.\n- `would-block`:               Can't finish the operation, it is still in progress. (EWOULDBLOCK, EAGAIN)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/bind.html>\n- <https://man7.org/linux/man-pages/man2/bind.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-bind>\n- <https://man.freebsd.org/cgi/man.cgi?query=bind&sektion=2&format=html>"
          }
        },
        "[method]udp-socket.finish-bind": {
          "name": "[method]udp-socket.finish-bind",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 134
            }
          ],
          "results": [
            {
              "type": 136
            }
          ]
        },
        "[method]udp-socket.start-connect": {
          "name": "[method]udp-socket.start-connect",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 134
            },
            {
              "name": "network",
              "type": 135
            },
            {
              "name": "remote-address",
              "type": 129
            }
          ],
          "results": [
            {
              "type": 136
            }
          ],
          "docs": {
            "contents": "Set the destination address.\n\nThe local-address is updated based on the best network path to `remote-address`.\n\nWhen a destination address is set:\n- all receive operations will only return datagrams sent from the provided `remote-address`.\n- the `send` function can only be used to send to this destination.\n\nNote that this function does not generate any network traffic and the peer is not aware of this \"connection\".\n\nUnlike in POSIX, this function is async. This enables interactive WASI hosts to inject permission prompts.\n\n# Typical `start` errors\n- `address-family-mismatch`:   The `remote-address` has the wrong address family. (EAFNOSUPPORT)\n- `invalid-remote-address`:    The IP address in `remote-address` is set to INADDR_ANY (`0.0.0.0` / `::`). (EDESTADDRREQ, EADDRNOTAVAIL)\n- `invalid-remote-address`:    The port in `remote-address` is set to 0. (EDESTADDRREQ, EADDRNOTAVAIL)\n- `already-attached`:          The socket is already bound to a different network. The `network` passed to `connect` must be identical to the one passed to `bind`.\n- `concurrency-conflict`:      Another `bind` or `connect` operation is already in progress. (EALREADY)\n\n# Typical `finish` errors\n- `ephemeral-ports-exhausted`: Tried to perform an implicit bind, but there were no ephemeral ports available. (EADDRINUSE, EADDRNOTAVAIL on Linux, EAGAIN on BSD)\n- `not-in-progress`:           A `connect` operation is not in progress.\n- `would-block`:               Can't finish the operation, it is still in progress. (EWOULDBLOCK, EAGAIN)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/connect.html>\n- <https://man7.org/linux/man-pages/man2/connect.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-connect>\n- <https://man.freebsd.org/cgi/man.cgi?connect>"
          }
        },
        "[method]udp-socket.finish-connect": {
          "name": "[method]udp-socket.finish-connect",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 134
            }
          ],
          "results": [
            {
              "type": 136
            }
          ]
        },
        "[method]udp-socket.receive": {
          "name": "[method]udp-socket.receive",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 134
            },
            {
              "name": "max-results",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 138
            }
          ],
          "docs": {
            "contents": "Receive messages on the socket.\n\nThis function attempts to receive up to `max-results` datagrams on the socket without blocking.\nThe returned list may contain fewer elements than requested, but never more.\nIf `max-results` is 0, this function returns successfully with an empty list.\n\n# Typical errors\n- `not-bound`:          The socket is not bound to any local address. (EINVAL)\n- `remote-unreachable`: The remote address is not reachable. (ECONNREFUSED, ECONNRESET, ENETRESET on Windows, EHOSTUNREACH, EHOSTDOWN, ENETUNREACH, ENETDOWN)\n- `would-block`:        There is no pending data available to be read at the moment. (EWOULDBLOCK, EAGAIN)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/recvfrom.html>\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/recvmsg.html>\n- <https://man7.org/linux/man-pages/man2/recv.2.html>\n- <https://man7.org/linux/man-pages/man2/recvmmsg.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-recv>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-recvfrom>\n- <https://learn.microsoft.com/en-us/previous-versions/windows/desktop/legacy/ms741687(v=vs.85)>\n- <https://man.freebsd.org/cgi/man.cgi?query=recv&sektion=2>"
          }
        },
        "[method]udp-socket.send": {
          "name": "[method]udp-socket.send",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 134
            },
            {
              "name": "datagrams",
              "type": 137
            }
          ],
          "results": [
            {
              "type": 139
            }
          ],
          "docs": {
            "contents": "Send messages on the socket.\n\nThis function attempts to send all provided `datagrams` on the socket without blocking and\nreturns how many messages were actually sent (or queued for sending).\n\nThis function semantically behaves the same as iterating the `datagrams` list and sequentially\nsending each individual datagram until either the end of the list has been reached or the first error occurred.\nIf at least one datagram has been sent successfully, this function never returns an error.\n\nIf the input list is empty, the function returns `ok(0)`.\n\nThe remote address option is required. To send a message to the \"connected\" peer,\ncall `remote-address` to get their address.\n\n# Typical errors\n- `address-family-mismatch`: The `remote-address` has the wrong address family. (EAFNOSUPPORT)\n- `invalid-remote-address`:  The IP address in `remote-address` is set to INADDR_ANY (`0.0.0.0` / `::`). (EDESTADDRREQ, EADDRNOTAVAIL)\n- `invalid-remote-address`:  The port in `remote-address` is set to 0. (EDESTADDRREQ, EADDRNOTAVAIL)\n- `already-connected`:       The socket is in \"connected\" mode and the `datagram.remote-address` does not match the address passed to `connect`. (EISCONN)\n- `not-bound`:               The socket is not bound to any local address. Unlike POSIX, this function does not perform an implicit bind.\n- `remote-unreachable`:      The remote address is not reachable. (ECONNREFUSED, ECONNRESET, ENETRESET on Windows, EHOSTUNREACH, EHOSTDOWN, ENETUNREACH, ENETDOWN)\n- `datagram-too-large`:      The datagram is too large. (EMSGSIZE)\n- `would-block`:             The send buffer is currently full. (EWOULDBLOCK, EAGAIN)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/sendto.html>\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/sendmsg.html>\n- <https://man7.org/linux/man-pages/man2/send.2.html>\n- <https://man7.org/linux/man-pages/man2/sendmmsg.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-send>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-sendto>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-wsasendmsg>\n- <https://man.freebsd.org/cgi/man.cgi?query=send&sektion=2>"
          }
        },
        "[method]udp-socket.local-address": {
          "name": "[method]udp-socket.local-address",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 134
            }
          ],
          "results": [
            {
              "type": 140
            }
          ],
          "docs": {
            "contents": "Get the current bound address.\n\n# Typical errors\n- `not-bound`: The socket is not bound to any local address.\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/getsockname.html>\n- <https://man7.org/linux/man-pages/man2/getsockname.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-getsockname>\n- <https://man.freebsd.org/cgi/man.cgi?getsockname>"
          }
        },
        "[method]udp-socket.remote-address": {
          "name": "[method]udp-socket.remote-address",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 134
            }
          ],
          "results": [
            {
              "type": 140
            }
          ],
          "docs": {
            "contents": "Get the address set with `connect`.\n\n# Typical errors\n- `not-connected`: The socket is not connected to a remote address. (ENOTCONN)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/getpeername.html>\n- <https://man7.org/linux/man-pages/man2/getpeername.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-getpeername>\n- <https://man.freebsd.org/cgi/man.cgi?query=getpeername&sektion=2&n=1>"
          }
        },
        "[method]udp-socket.address-family": {
          "name": "[method]udp-socket.address-family",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 134
            }
          ],
          "results": [
            {
              "type": 130
            }
          ],
          "docs": {
            "contents": "Whether this is a IPv4 or IPv6 socket.\n\nEquivalent to the SO_DOMAIN socket option."
          }
        },
        "[method]udp-socket.ipv6-only": {
          "name": "[method]udp-socket.ipv6-only",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 134
            }
          ],
          "results": [
            {
              "type": 141
            }
          ],
          "docs": {
            "contents": "Whether IPv4 compatibility (dual-stack) mode is disabled or not.\n\nEquivalent to the IPV6_V6ONLY socket option.\n\n# Typical errors\n- `ipv6-only-operation`:  (get/set) `this` socket is an IPv4 socket.\n- `already-bound`:        (set) The socket is already bound.\n- `not-supported`:        (set) Host does not support dual-stack sockets. (Implementations are not required to.)\n- `concurrency-conflict`: (set) Another `bind` or `connect` operation is already in progress. (EALREADY)"
          }
        },
        "[method]udp-socket.set-ipv6-only": {
          "name": "[method]udp-socket.set-ipv6-only",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 134
            },
            {
              "name": "value",
              "type": "bool"
            }
          ],
          "results": [
            {
              "type": 136
            }
          ]
        },
        "[method]udp-socket.unicast-hop-limit": {
          "name": "[method]udp-socket.unicast-hop-limit",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 134
            }
          ],
          "results": [
            {
              "type": 142
            }
          ],
          "docs": {
            "contents": "Equivalent to the IP_TTL & IPV6_UNICAST_HOPS socket options.\n\n# Typical errors\n- `concurrency-conflict`: (set) Another `bind` or `connect` operation is already in progress. (EALREADY)"
          }
        },
        "[method]udp-socket.set-unicast-hop-limit": {
          "name": "[method]udp-socket.set-unicast-hop-limit",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 134
            },
            {
              "name": "value",
              "type": "u8"
            }
          ],
          "results": [
            {
              "type": 136
            }
          ]
        },
        "[method]udp-socket.receive-buffer-size": {
          "name": "[method]udp-socket.receive-buffer-size",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 134
            }
          ],
          "results": [
            {
              "type": 139
            }
          ],
          "docs": {
            "contents": "The kernel buffer space reserved for sends/receives on this socket.\n\nNote #1: an implementation may choose to cap or round the buffer size when setting the value.\nIn other words, after setting a value, reading the same setting back may return a different value.\n\nNote #2: there is not necessarily a direct relationship between the kernel buffer size and the bytes of\nactual data to be sent/received by the application, because the kernel might also use the buffer space\nfor internal metadata structures.\n\nEquivalent to the SO_RCVBUF and SO_SNDBUF socket options.\n\n# Typical errors\n- `concurrency-conflict`: (set) Another `bind` or `connect` operation is already in progress. (EALREADY)"
          }
        },
        "[method]udp-socket.set-receive-buffer-size": {
          "name": "[method]udp-socket.set-receive-buffer-size",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 134
            },
            {
              "name": "value",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 136
            }
          ]
        },
        "[method]udp-socket.send-buffer-size": {
          "name": "[method]udp-socket.send-buffer-size",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 134
            }
          ],
          "results": [
            {
              "type": 139
            }
          ]
        },
        "[method]udp-socket.set-send-buffer-size": {
          "name": "[method]udp-socket.set-send-buffer-size",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 134
            },
            {
              "name": "value",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 136
            }
          ]
        },
        "[method]udp-socket.subscribe": {
          "name": "[method]udp-socket.subscribe",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 134
            }
          ],
          "results": [
            {
              "type": 152
            }
          ],
          "docs": {
            "contents": "Create a `pollable` which will resolve once the socket is ready for I/O.\n\nNote: this function is here for WASI Preview2 only.\nIt's planned to be removed when `future` is natively supported in Preview3."
          }
        }
      },
      "package": 3
    },
    {
      "name": "udp-create-socket",
      "types": {
        "network": 143,
        "error-code": 144,
        "ip-address-family": 145,
        "udp-socket": 146
      },
      "functions": {
        "create-udp-socket": {
          "name": "create-udp-socket",
          "kind": "freestanding",
          "params": [
            {
              "name": "address-family",
              "type": 145
            }
          ],
          "results": [
            {
              "type": 148
            }
          ],
          "docs": {
            "contents": "Create a new UDP socket.\n\nSimilar to `socket(AF_INET or AF_INET6, SOCK_DGRAM, IPPROTO_UDP)` in POSIX.\n\nThis function does not require a network capability handle. This is considered to be safe because\nat time of creation, the socket is not bound to any `network` yet. Up to the moment `bind`/`connect` is called,\nthe socket is effectively an in-memory configuration object, unable to communicate with the outside world.\n\nAll sockets are non-blocking. Use the wasi-poll interface to block on asynchronous operations.\n\n# Typical errors\n- `not-supported`:                The host does not support UDP sockets. (EOPNOTSUPP)\n- `address-family-not-supported`: The specified `address-family` is not supported. (EAFNOSUPPORT)\n- `new-socket-limit`:             The new socket resource could not be created because of a system limit. (EMFILE, ENFILE)\n\n# References:\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/socket.html>\n- <https://man7.org/linux/man-pages/man2/socket.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-wsasocketw>\n- <https://man.freebsd.org/cgi/man.cgi?query=socket&sektion=2>"
          }
        }
      },
      "package": 3
    },
    {
      "name": "insecure-seed",
      "types": {},
      "functions": {
        "insecure-seed": {
          "name": "insecure-seed",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 153
            }
          ],
          "docs": {
            "contents": "Return a 128-bit value that may contain a pseudo-random value.\n\nThe returned value is not required to be computed from a CSPRNG, and may\neven be entirely deterministic. Host implementations are encouraged to\nprovide pseudo-random values to any program exposed to\nattacker-controlled content, to enable DoS protection built into many\nlanguages' hash-map implementations.\n\nThis function is intended to only be called once, by a source language\nto initialize Denial Of Service (DoS) protection in its hash-map\nimplementation.\n\n# Expected future evolution\n\nThis will likely be changed to a value import, to prevent it from being\ncalled multiple times and potentially used for purposes other than DoS\nprotection."
          }
        }
      },
      "docs": {
        "contents": "The insecure-seed interface for seeding hash-map DoS resistance.\n\nIt is intended to be portable at least between Unix-family platforms and\nWindows."
      },
      "package": 4
    },
    {
      "name": "insecure",
      "types": {},
      "functions": {
        "get-insecure-random-bytes": {
          "name": "get-insecure-random-bytes",
          "kind": "freestanding",
          "params": [
            {
              "name": "len",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 154
            }
          ],
          "docs": {
            "contents": "Return `len` insecure pseudo-random bytes.\n\nThis function is not cryptographically secure. Do not use it for\nanything related to security.\n\nThere are no requirements on the values of the returned bytes, however\nimplementations are encouraged to return evenly distributed values with\na long period."
          }
        },
        "get-insecure-random-u64": {
          "name": "get-insecure-random-u64",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": "u64"
            }
          ],
          "docs": {
            "contents": "Return an insecure pseudo-random `u64` value.\n\nThis function returns the same type of pseudo-random data as\n`get-insecure-random-bytes`, represented as a `u64`."
          }
        }
      },
      "docs": {
        "contents": "The insecure interface for insecure pseudo-random numbers.\n\nIt is intended to be portable at least between Unix-family platforms and\nWindows."
      },
      "package": 4
    },
    {
      "name": "random",
      "types": {},
      "functions": {
        "get-random-bytes": {
          "name": "get-random-bytes",
          "kind": "freestanding",
          "params": [
            {
              "name": "len",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 154
            }
          ],
          "docs": {
            "contents": "Return `len` cryptographically-secure random or pseudo-random bytes.\n\nThis function must produce data at least as cryptographically secure and\nfast as an adequately seeded cryptographically-secure pseudo-random\nnumber generator (CSPRNG). It must not block, from the perspective of\nthe calling program, under any circumstances, including on the first\nrequest and on requests for numbers of bytes. The returned data must\nalways be unpredictable.\n\nThis function must always return fresh data. Deterministic environments\nmust omit this function, rather than implementing it with deterministic\ndata."
          }
        },
        "get-random-u64": {
          "name": "get-random-u64",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": "u64"
            }
          ],
          "docs": {
            "contents": "Return a cryptographically-secure random or pseudo-random `u64` value.\n\nThis function returns the same type of data as `get-random-bytes`,\nrepresented as a `u64`."
          }
        }
      },
      "docs": {
        "contents": "WASI Random is a random data API.\n\nIt is intended to be portable at least between Unix-family platforms and\nWindows."
      },
      "package": 4
    },
    {
      "name": "environment",
      "types": {},
      "functions": {
        "get-environment": {
          "name": "get-environment",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 156
            }
          ],
          "docs": {
            "contents": "Get the POSIX-style environment variables.\n\nEach environment variable is provided as a pair of string variable names\nand string value.\n\nMorally, these are a value import, but until value imports are available\nin the component model, this import function should return the same\nvalues each time it is called."
          }
        },
        "get-arguments": {
          "name": "get-arguments",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 157
            }
          ],
          "docs": {
            "contents": "Get the POSIX-style arguments to the program."
          }
        },
        "initial-cwd": {
          "name": "initial-cwd",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 158
            }
          ],
          "docs": {
            "contents": "Return a path that programs should use as their initial current working\ndirectory, interpreting `.` as shorthand for this."
          }
        }
      },
      "package": 5
    },
    {
      "name": "exit",
      "types": {},
      "functions": {
        "exit": {
          "name": "exit",
          "kind": "freestanding",
          "params": [
            {
              "name": "status",
              "type": 159
            }
          ],
          "results": [],
          "docs": {
            "contents": "Exit the current instance and any linked instances."
          }
        }
      },
      "package": 5
    },
    {
      "name": "run",
      "types": {},
      "functions": {
        "run": {
          "name": "run",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 159
            }
          ],
          "docs": {
            "contents": "Run the program."
          }
        }
      },
      "package": 5
    },
    {
      "name": "stdin",
      "types": {
        "input-stream": 160
      },
      "functions": {
        "get-stdin": {
          "name": "get-stdin",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 174
            }
          ]
        }
      },
      "package": 5
    },
    {
      "name": "stdout",
      "types": {
        "output-stream": 161
      },
      "functions": {
        "get-stdout": {
          "name": "get-stdout",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 175
            }
          ]
        }
      },
      "package": 5
    },
    {
      "name": "stderr",
      "types": {
        "output-stream": 162
      },
      "functions": {
        "get-stderr": {
          "name": "get-stderr",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 176
            }
          ]
        }
      },
      "package": 5
    },
    {
      "name": "terminal-input",
      "types": {
        "terminal-input": 163
      },
      "functions": {},
      "package": 5
    },
    {
      "name": "terminal-output",
      "types": {
        "terminal-output": 164
      },
      "functions": {},
      "package": 5
    },
    {
      "name": "terminal-stdin",
      "types": {
        "terminal-input": 165
      },
      "functions": {
        "get-terminal-stdin": {
          "name": "get-terminal-stdin",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 167
            }
          ],
          "docs": {
            "contents": "If stdin is connected to a terminal, return a `terminal-input` handle\nallowing further interaction with it."
          }
        }
      },
      "docs": {
        "contents": "An interface providing an optional `terminal-input` for stdin as a\nlink-time authority."
      },
      "package": 5
    },
    {
      "name": "terminal-stdout",
      "types": {
        "terminal-output": 168
      },
      "functions": {
        "get-terminal-stdout": {
          "name": "get-terminal-stdout",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 170
            }
          ],
          "docs": {
            "contents": "If stdout is connected to a terminal, return a `terminal-output` handle\nallowing further interaction with it."
          }
        }
      },
      "docs": {
        "contents": "An interface providing an optional `terminal-output` for stdout as a\nlink-time authority."
      },
      "package": 5
    },
    {
      "name": "terminal-stderr",
      "types": {
        "terminal-output": 171
      },
      "functions": {
        "get-terminal-stderr": {
          "name": "get-terminal-stderr",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 173
            }
          ],
          "docs": {
            "contents": "If stderr is connected to a terminal, return a `terminal-output` handle\nallowing further interaction with it."
          }
        }
      },
      "docs": {
        "contents": "An interface providing an optional `terminal-output` for stderr as a\nlink-time authority."
      },
      "package": 5
    },
    {
      "name": "types",
      "types": {
        "input-stream": 177,
        "output-stream": 178,
        "pollable": 179,
        "method": 180,
        "scheme": 181,
        "error": 182,
        "fields": 183,
        "headers": 184,
        "trailers": 185,
        "incoming-request": 186,
        "outgoing-request": 187,
        "request-options": 189,
        "response-outparam": 190,
        "status-code": 191,
        "incoming-response": 192,
        "incoming-body": 193,
        "future-trailers": 194,
        "outgoing-response": 195,
        "outgoing-body": 196,
        "future-incoming-response": 197
      },
      "functions": {
        "[constructor]fields": {
          "name": "[constructor]fields",
          "kind": {
            "constructor": 183
          },
          "params": [
            {
              "name": "entries",
              "type": 200
            }
          ],
          "results": [
            {
              "type": 241
            }
          ]
        },
        "[method]fields.get": {
          "name": "[method]fields.get",
          "kind": {
            "method": 183
          },
          "params": [
            {
              "name": "self",
              "type": 201
            },
            {
              "name": "name",
              "type": "string"
            }
          ],
          "results": [
            {
              "type": 202
            }
          ]
        },
        "[method]fields.set": {
          "name": "[method]fields.set",
          "kind": {
            "method": 183
          },
          "params": [
            {
              "name": "self",
              "type": 201
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "value",
              "type": 202
            }
          ],
          "results": []
        },
        "[method]fields.delete": {
          "name": "[method]fields.delete",
          "kind": {
            "method": 183
          },
          "params": [
            {
              "name": "self",
              "type": 201
            },
            {
              "name": "name",
              "type": "string"
            }
          ],
          "results": []
        },
        "[method]fields.append": {
          "name": "[method]fields.append",
          "kind": {
            "method": 183
          },
          "params": [
            {
              "name": "self",
              "type": 201
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "value",
              "type": 198
            }
          ],
          "results": []
        },
        "[method]fields.entries": {
          "name": "[method]fields.entries",
          "kind": {
            "method": 183
          },
          "params": [
            {
              "name": "self",
              "type": 201
            }
          ],
          "results": [
            {
              "type": 200
            }
          ]
        },
        "[method]fields.clone": {
          "name": "[method]fields.clone",
          "kind": {
            "method": 183
          },
          "params": [
            {
              "name": "self",
              "type": 201
            }
          ],
          "results": [
            {
              "type": 241
            }
          ]
        },
        "[method]incoming-request.method": {
          "name": "[method]incoming-request.method",
          "kind": {
            "method": 186
          },
          "params": [
            {
              "name": "self",
              "type": 203
            }
          ],
          "results": [
            {
              "type": 180
            }
          ]
        },
        "[method]incoming-request.path-with-query": {
          "name": "[method]incoming-request.path-with-query",
          "kind": {
            "method": 186
          },
          "params": [
            {
              "name": "self",
              "type": 203
            }
          ],
          "results": [
            {
              "type": 204
            }
          ]
        },
        "[method]incoming-request.scheme": {
          "name": "[method]incoming-request.scheme",
          "kind": {
            "method": 186
          },
          "params": [
            {
              "name": "self",
              "type": 203
            }
          ],
          "results": [
            {
              "type": 205
            }
          ]
        },
        "[method]incoming-request.authority": {
          "name": "[method]incoming-request.authority",
          "kind": {
            "method": 186
          },
          "params": [
            {
              "name": "self",
              "type": 203
            }
          ],
          "results": [
            {
              "type": 204
            }
          ]
        },
        "[method]incoming-request.headers": {
          "name": "[method]incoming-request.headers",
          "kind": {
            "method": 186
          },
          "params": [
            {
              "name": "self",
              "type": 203
            }
          ],
          "results": [
            {
              "type": 242
            }
          ]
        },
        "[method]incoming-request.consume": {
          "name": "[method]incoming-request.consume",
          "kind": {
            "method": 186
          },
          "params": [
            {
              "name": "self",
              "type": 203
            }
          ],
          "results": [
            {
              "type": 207
            }
          ]
        },
        "[constructor]outgoing-request": {
          "name": "[constructor]outgoing-request",
          "kind": {
            "constructor": 187
          },
          "params": [
            {
              "name": "method",
              "type": 180
            },
            {
              "name": "path-with-query",
              "type": 204
            },
            {
              "name": "scheme",
              "type": 205
            },
            {
              "name": "authority",
              "type": 204
            },
            {
              "name": "headers",
              "type": 208
            }
          ],
          "results": [
            {
              "type": 243
            }
          ]
        },
        "[method]outgoing-request.write": {
          "name": "[method]outgoing-request.write",
          "kind": {
            "method": 187
          },
          "params": [
            {
              "name": "self",
              "type": 209
            }
          ],
          "results": [
            {
              "type": 211
            }
          ]
        },
        "[static]response-outparam.set": {
          "name": "[static]response-outparam.set",
          "kind": {
            "static": 190
          },
          "params": [
            {
              "name": "param",
              "type": 244
            },
            {
              "name": "response",
              "type": 213
            }
          ],
          "results": []
        },
        "[method]incoming-response.status": {
          "name": "[method]incoming-response.status",
          "kind": {
            "method": 192
          },
          "params": [
            {
              "name": "self",
              "type": 214
            }
          ],
          "results": [
            {
              "type": 191
            }
          ]
        },
        "[method]incoming-response.headers": {
          "name": "[method]incoming-response.headers",
          "kind": {
            "method": 192
          },
          "params": [
            {
              "name": "self",
              "type": 214
            }
          ],
          "results": [
            {
              "type": 242
            }
          ]
        },
        "[method]incoming-response.consume": {
          "name": "[method]incoming-response.consume",
          "kind": {
            "method": 192
          },
          "params": [
            {
              "name": "self",
              "type": 214
            }
          ],
          "results": [
            {
              "type": 207
            }
          ]
        },
        "[method]incoming-body.stream": {
          "name": "[method]incoming-body.stream",
          "kind": {
            "method": 193
          },
          "params": [
            {
              "name": "self",
              "type": 215
            }
          ],
          "results": [
            {
              "type": 217
            }
          ]
        },
        "[static]incoming-body.finish": {
          "name": "[static]incoming-body.finish",
          "kind": {
            "static": 193
          },
          "params": [
            {
              "name": "this",
              "type": 206
            }
          ],
          "results": [
            {
              "type": 245
            }
          ]
        },
        "[method]future-trailers.subscribe": {
          "name": "[method]future-trailers.subscribe",
          "kind": {
            "method": 194
          },
          "params": [
            {
              "name": "self",
              "type": 218
            }
          ],
          "results": [
            {
              "type": 246
            }
          ],
          "docs": {
            "contents": "Pollable that resolves when the body has been fully read, and the trailers\nare ready to be consumed."
          }
        },
        "[method]future-trailers.get": {
          "name": "[method]future-trailers.get",
          "kind": {
            "method": 194
          },
          "params": [
            {
              "name": "self",
              "type": 218
            }
          ],
          "results": [
            {
              "type": 221
            }
          ],
          "docs": {
            "contents": "Retrieve reference to trailers, if they are ready."
          }
        },
        "[constructor]outgoing-response": {
          "name": "[constructor]outgoing-response",
          "kind": {
            "constructor": 195
          },
          "params": [
            {
              "name": "status-code",
              "type": 191
            },
            {
              "name": "headers",
              "type": 208
            }
          ],
          "results": [
            {
              "type": 212
            }
          ]
        },
        "[method]outgoing-response.write": {
          "name": "[method]outgoing-response.write",
          "kind": {
            "method": 195
          },
          "params": [
            {
              "name": "self",
              "type": 222
            }
          ],
          "results": [
            {
              "type": 211
            }
          ],
          "docs": {
            "contents": "Will give the child outgoing-response at most once. subsequent calls will\nreturn an error."
          }
        },
        "[method]outgoing-body.write": {
          "name": "[method]outgoing-body.write",
          "kind": {
            "method": 196
          },
          "params": [
            {
              "name": "self",
              "type": 223
            }
          ],
          "results": [
            {
              "type": 225
            }
          ],
          "docs": {
            "contents": "Will give the child output-stream at most once. subsequent calls will\nreturn an error."
          }
        },
        "[static]outgoing-body.finish": {
          "name": "[static]outgoing-body.finish",
          "kind": {
            "static": 196
          },
          "params": [
            {
              "name": "this",
              "type": 210
            },
            {
              "name": "trailers",
              "type": 226
            }
          ],
          "results": [],
          "docs": {
            "contents": "Finalize an outgoing body, optionally providing trailers. This must be\ncalled to signal that the response is complete. If the `outgoing-body` is\ndropped without calling `outgoing-body-finalize`, the implementation\nshould treat the body as corrupted."
          }
        },
        "[method]future-incoming-response.get": {
          "name": "[method]future-incoming-response.get",
          "kind": {
            "method": 197
          },
          "params": [
            {
              "name": "self",
              "type": 227
            }
          ],
          "results": [
            {
              "type": 231
            }
          ],
          "docs": {
            "contents": "option indicates readiness.\nouter result indicates you are allowed to get the\nincoming-response-or-error at most once. subsequent calls after ready\nwill return an error here.\ninner result indicates whether the incoming-response was available, or an\nerror occured."
          }
        },
        "[method]future-incoming-response.subscribe": {
          "name": "[method]future-incoming-response.subscribe",
          "kind": {
            "method": 197
          },
          "params": [
            {
              "name": "self",
              "type": 227
            }
          ],
          "results": [
            {
              "type": 246
            }
          ]
        }
      },
      "package": 6
    },
    {
      "name": "incoming-handler",
      "types": {
        "incoming-request": 232,
        "response-outparam": 233
      },
      "functions": {
        "handle": {
          "name": "handle",
          "kind": "freestanding",
          "params": [
            {
              "name": "request",
              "type": 247
            },
            {
              "name": "response-out",
              "type": 248
            }
          ],
          "results": []
        }
      },
      "package": 6
    },
    {
      "name": "outgoing-handler",
      "types": {
        "outgoing-request": 234,
        "request-options": 235,
        "future-incoming-response": 236,
        "error": 237
      },
      "functions": {
        "handle": {
          "name": "handle",
          "kind": "freestanding",
          "params": [
            {
              "name": "request",
              "type": 249
            },
            {
              "name": "options",
              "type": 238
            }
          ],
          "results": [
            {
              "type": 240
            }
          ]
        }
      },
      "package": 6
    },
    {
      "name": "logging",
      "types": {
        "level": 250
      },
      "functions": {
        "log": {
          "name": "log",
          "kind": "freestanding",
          "params": [
            {
              "name": "level",
              "type": 250
            },
            {
              "name": "context",
              "type": "string"
            },
            {
              "name": "message",
              "type": "string"
            }
          ],
          "results": [],
          "docs": {
            "contents": "Emit a log message.\n\nA log message has a `level` describing what kind of message is being\nsent, a context, which is an uninterpreted string meant to help\nconsumers group similar messages, and a string containing the message\ntext."
          }
        }
      },
      "docs": {
        "contents": "WASI Logging is a logging API intended to let users emit log messages with\nsimple priority levels and context values."
      },
      "package": 7
    }
  ],
  "types": [
    {
      "name": "pollable",
      "kind": "resource",
      "owner": {
        "interface": 0
      },
      "docs": {
        "contents": "A \"pollable\" handle."
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 0
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": 1
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": "u32"
      },
      "owner": null
    },
    {
      "name": "pollable",
      "kind": {
        "type": 0
      },
      "owner": {
        "interface": 1
      }
    },
    {
      "name": "error",
      "kind": "resource",
      "owner": {
        "interface": 1
      },
      "docs": {
        "contents": "Contextual error information about the last failure that happened on\na read, write, or flush from an `input-stream` or `output-stream`.\n\nThis type is returned through the `stream-error` type whenever an\noperation on a stream directly fails or an error is discovered\nafter-the-fact, for example when a write's failure shows up through a\nlater `flush` or `check-write`.\n\nInterfaces such as `wasi:filesystem/types` provide functionality to\nfurther \"downcast\" this error into interface-specific error information."
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 5
        }
      },
      "owner": null
    },
    {
      "name": "stream-error",
      "kind": {
        "variant": {
          "cases": [
            {
              "name": "last-operation-failed",
              "type": 6,
              "docs": {
                "contents": "The last operation (a write or flush) failed before completion.\n\nMore information is available in the `error` payload."
              }
            },
            {
              "name": "closed",
              "type": null,
              "docs": {
                "contents": "The stream is closed: no more input will be accepted by the\nstream. A closed output-stream will return this error on all\nfuture operations."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 1
      },
      "docs": {
        "contents": "An error for input-stream and output-stream operations."
      }
    },
    {
      "name": "input-stream",
      "kind": "resource",
      "owner": {
        "interface": 1
      },
      "docs": {
        "contents": "An input bytestream.\n\n`input-stream`s are *non-blocking* to the extent practical on underlying\nplatforms. I/O operations always return promptly; if fewer bytes are\npromptly available than requested, they return the number of bytes promptly\navailable, which could even be zero. To wait for data to be available,\nuse the `subscribe` function to obtain a `pollable` which can be polled\nfor using `wasi:io/poll`."
      }
    },
    {
      "name": "output-stream",
      "kind": "resource",
      "owner": {
        "interface": 1
      },
      "docs": {
        "contents": "An output bytestream.\n\n`output-stream`s are *non-blocking* to the extent practical on\nunderlying platforms. Except where specified otherwise, I/O operations also\nalways return promptly, after the number of bytes that can be written\npromptly, which could even be zero. To wait for the stream to be ready to\naccept data, the `subscribe` function to obtain a `pollable` which can be\npolled for using `wasi:io/poll`."
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 5
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 8
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": "u8"
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 12,
          "err": 7
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": "u64",
          "err": 7
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 9
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": null,
          "err": 7
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 4
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 8
        }
      },
      "owner": null
    },
    {
      "name": "pollable",
      "kind": {
        "type": 0
      },
      "owner": {
        "interface": 2
      }
    },
    {
      "name": "instant",
      "kind": {
        "type": "u64"
      },
      "owner": {
        "interface": 2
      },
      "docs": {
        "contents": "A timestamp in nanoseconds."
      }
    },
    {
      "name": "datetime",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "seconds",
              "type": "u64"
            },
            {
              "name": "nanoseconds",
              "type": "u32"
            }
          ]
        }
      },
      "owner": {
        "interface": 3
      },
      "docs": {
        "contents": "A time and date in seconds plus nanoseconds."
      }
    },
    {
      "name": "datetime",
      "kind": {
        "type": 21
      },
      "owner": {
        "interface": 4
      }
    },
    {
      "name": "timezone-display",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "utc-offset",
              "type": "s32",
              "docs": {
                "contents": "The number of seconds difference between UTC time and the local\ntime of the timezone.\n\nThe returned value will always be less than 86400 which is the\nnumber of seconds in a day (24*60*60).\n\nIn implementations that do not expose an actual time zone, this\nshould return 0."
              }
            },
            {
              "name": "name",
              "type": "string",
              "docs": {
                "contents": "The abbreviated name of the timezone to display to a user. The name\n`UTC` indicates Coordinated Universal Time. Otherwise, this should\nreference local standards for the name of the time zone.\n\nIn implementations that do not expose an actual time zone, this\nshould be the string `UTC`.\n\nIn time zones that do not have an applicable name, a formatted\nrepresentation of the UTC offset may be returned, such as `-04:00`."
              }
            },
            {
              "name": "in-daylight-saving-time",
              "type": "bool",
              "docs": {
                "contents": "Whether daylight saving time is active.\n\nIn implementations that do not expose an actual time zone, this\nshould return false."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 4
      },
      "docs": {
        "contents": "Information useful for displaying the timezone of a specific `datetime`.\n\nThis information may vary within a single `timezone` to reflect daylight\nsaving time adjustments."
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 19
        }
      },
      "owner": null
    },
    {
      "name": "input-stream",
      "kind": {
        "type": 8
      },
      "owner": {
        "interface": 5
      }
    },
    {
      "name": "output-stream",
      "kind": {
        "type": 9
      },
      "owner": {
        "interface": 5
      }
    },
    {
      "name": "error",
      "kind": {
        "type": 5
      },
      "owner": {
        "interface": 5
      }
    },
    {
      "name": "datetime",
      "kind": {
        "type": 21
      },
      "owner": {
        "interface": 5
      }
    },
    {
      "name": "filesize",
      "kind": {
        "type": "u64"
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "File size or length of a region within a file."
      }
    },
    {
      "name": "descriptor-type",
      "kind": {
        "enum": {
          "cases": [
            {
              "name": "unknown",
              "docs": {
                "contents": "The type of the descriptor or file is unknown or is different from\nany of the other types specified."
              }
            },
            {
              "name": "block-device",
              "docs": {
                "contents": "The descriptor refers to a block device inode."
              }
            },
            {
              "name": "character-device",
              "docs": {
                "contents": "The descriptor refers to a character device inode."
              }
            },
            {
              "name": "directory",
              "docs": {
                "contents": "The descriptor refers to a directory inode."
              }
            },
            {
              "name": "fifo",
              "docs": {
                "contents": "The descriptor refers to a named pipe."
              }
            },
            {
              "name": "symbolic-link",
              "docs": {
                "contents": "The file refers to a symbolic link inode."
              }
            },
            {
              "name": "regular-file",
              "docs": {
                "contents": "The descriptor refers to a regular file inode."
              }
            },
            {
              "name": "socket",
              "docs": {
                "contents": "The descriptor refers to a socket."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "The type of a filesystem object referenced by a descriptor.\n\nNote: This was called `filetype` in earlier versions of WASI."
      }
    },
    {
      "name": "descriptor-flags",
      "kind": {
        "flags": {
          "flags": [
            {
              "name": "read",
              "docs": {
                "contents": "Read mode: Data can be read."
              }
            },
            {
              "name": "write",
              "docs": {
                "contents": "Write mode: Data can be written to."
              }
            },
            {
              "name": "file-integrity-sync",
              "docs": {
                "contents": "Request that writes be performed according to synchronized I/O file\nintegrity completion. The data stored in the file and the file's\nmetadata are synchronized. This is similar to `O_SYNC` in POSIX.\n\nThe precise semantics of this operation have not yet been defined for\nWASI. At this time, it should be interpreted as a request, and not a\nrequirement."
              }
            },
            {
              "name": "data-integrity-sync",
              "docs": {
                "contents": "Request that writes be performed according to synchronized I/O data\nintegrity completion. Only the data stored in the file is\nsynchronized. This is similar to `O_DSYNC` in POSIX.\n\nThe precise semantics of this operation have not yet been defined for\nWASI. At this time, it should be interpreted as a request, and not a\nrequirement."
              }
            },
            {
              "name": "requested-write-sync",
              "docs": {
                "contents": "Requests that reads be performed at the same level of integrety\nrequested for writes. This is similar to `O_RSYNC` in POSIX.\n\nThe precise semantics of this operation have not yet been defined for\nWASI. At this time, it should be interpreted as a request, and not a\nrequirement."
              }
            },
            {
              "name": "mutate-directory",
              "docs": {
                "contents": "Mutating directories mode: Directory contents may be mutated.\n\nWhen this flag is unset on a descriptor, operations using the\ndescriptor which would create, rename, delete, modify the data or\nmetadata of filesystem objects, or obtain another handle which\nwould permit any of those, shall fail with `error-code::read-only` if\nthey would otherwise succeed.\n\nThis may only be set on directories."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "Descriptor flags.\n\nNote: This was called `fdflags` in earlier versions of WASI."
      }
    },
    {
      "name": "path-flags",
      "kind": {
        "flags": {
          "flags": [
            {
              "name": "symlink-follow",
              "docs": {
                "contents": "As long as the resolved path corresponds to a symbolic link, it is\nexpanded."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "Flags determining the method of how paths are resolved."
      }
    },
    {
      "name": "open-flags",
      "kind": {
        "flags": {
          "flags": [
            {
              "name": "create",
              "docs": {
                "contents": "Create file if it does not exist, similar to `O_CREAT` in POSIX."
              }
            },
            {
              "name": "directory",
              "docs": {
                "contents": "Fail if not a directory, similar to `O_DIRECTORY` in POSIX."
              }
            },
            {
              "name": "exclusive",
              "docs": {
                "contents": "Fail if file already exists, similar to `O_EXCL` in POSIX."
              }
            },
            {
              "name": "truncate",
              "docs": {
                "contents": "Truncate file to size 0, similar to `O_TRUNC` in POSIX."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "Open flags used by `open-at`."
      }
    },
    {
      "name": "modes",
      "kind": {
        "flags": {
          "flags": [
            {
              "name": "readable",
              "docs": {
                "contents": "True if the resource is considered readable by the containing\nfilesystem."
              }
            },
            {
              "name": "writable",
              "docs": {
                "contents": "True if the resource is considered writable by the containing\nfilesystem."
              }
            },
            {
              "name": "executable",
              "docs": {
                "contents": "True if the resource is considered executable by the containing\nfilesystem. This does not apply to directories."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "Permissions mode used by `open-at`, `change-file-permissions-at`, and\nsimilar."
      }
    },
    {
      "name": "access-type",
      "kind": {
        "variant": {
          "cases": [
            {
              "name": "access",
              "type": 34,
              "docs": {
                "contents": "Test for readability, writeability, or executability."
              }
            },
            {
              "name": "exists",
              "type": null,
              "docs": {
                "contents": "Test whether the path exists."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "Access type used by `access-at`."
      }
    },
    {
      "name": "link-count",
      "kind": {
        "type": "u64"
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "Number of hard links to an inode."
      }
    },
    {
      "name": null,
      "kind": {
        "option": 28
      },
      "owner": null
    },
    {
      "name": "descriptor-stat",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "type",
              "type": 30,
              "docs": {
                "contents": "File type."
              }
            },
            {
              "name": "link-count",
              "type": 36,
              "docs": {
                "contents": "Number of hard links to the file."
              }
            },
            {
              "name": "size",
              "type": 29,
              "docs": {
                "contents": "For regular files, the file size in bytes. For symbolic links, the\nlength in bytes of the pathname contained in the symbolic link."
              }
            },
            {
              "name": "data-access-timestamp",
              "type": 37,
              "docs": {
                "contents": "Last data access timestamp.\n\nIf the `option` is none, the platform doesn't maintain an access\ntimestamp for this file."
              }
            },
            {
              "name": "data-modification-timestamp",
              "type": 37,
              "docs": {
                "contents": "Last data modification timestamp.\n\nIf the `option` is none, the platform doesn't maintain a\nmodification timestamp for this file."
              }
            },
            {
              "name": "status-change-timestamp",
              "type": 37,
              "docs": {
                "contents": "Last file status-change timestamp.\n\nIf the `option` is none, the platform doesn't maintain a\nstatus-change timestamp for this file."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "File attributes.\n\nNote: This was called `filestat` in earlier versions of WASI."
      }
    },
    {
      "name": "new-timestamp",
      "kind": {
        "variant": {
          "cases": [
            {
              "name": "no-change",
              "type": null,
              "docs": {
                "contents": "Leave the timestamp set to its previous value."
              }
            },
            {
              "name": "now",
              "type": null,
              "docs": {
                "contents": "Set the timestamp to the current time of the system clock associated\nwith the filesystem."
              }
            },
            {
              "name": "timestamp",
              "type": 28,
              "docs": {
                "contents": "Set the timestamp to the given value."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "When setting a timestamp, this gives the value to set it to."
      }
    },
    {
      "name": "directory-entry",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "type",
              "type": 30,
              "docs": {
                "contents": "The type of the file referred to by this directory entry."
              }
            },
            {
              "name": "name",
              "type": "string",
              "docs": {
                "contents": "The name of the object."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "A directory entry."
      }
    },
    {
      "name": "error-code",
      "kind": {
        "enum": {
          "cases": [
            {
              "name": "access",
              "docs": {
                "contents": "Permission denied, similar to `EACCES` in POSIX."
              }
            },
            {
              "name": "would-block",
              "docs": {
                "contents": "Resource unavailable, or operation would block, similar to `EAGAIN` and `EWOULDBLOCK` in POSIX."
              }
            },
            {
              "name": "already",
              "docs": {
                "contents": "Connection already in progress, similar to `EALREADY` in POSIX."
              }
            },
            {
              "name": "bad-descriptor",
              "docs": {
                "contents": "Bad descriptor, similar to `EBADF` in POSIX."
              }
            },
            {
              "name": "busy",
              "docs": {
                "contents": "Device or resource busy, similar to `EBUSY` in POSIX."
              }
            },
            {
              "name": "deadlock",
              "docs": {
                "contents": "Resource deadlock would occur, similar to `EDEADLK` in POSIX."
              }
            },
            {
              "name": "quota",
              "docs": {
                "contents": "Storage quota exceeded, similar to `EDQUOT` in POSIX."
              }
            },
            {
              "name": "exist",
              "docs": {
                "contents": "File exists, similar to `EEXIST` in POSIX."
              }
            },
            {
              "name": "file-too-large",
              "docs": {
                "contents": "File too large, similar to `EFBIG` in POSIX."
              }
            },
            {
              "name": "illegal-byte-sequence",
              "docs": {
                "contents": "Illegal byte sequence, similar to `EILSEQ` in POSIX."
              }
            },
            {
              "name": "in-progress",
              "docs": {
                "contents": "Operation in progress, similar to `EINPROGRESS` in POSIX."
              }
            },
            {
              "name": "interrupted",
              "docs": {
                "contents": "Interrupted function, similar to `EINTR` in POSIX."
              }
            },
            {
              "name": "invalid",
              "docs": {
                "contents": "Invalid argument, similar to `EINVAL` in POSIX."
              }
            },
            {
              "name": "io",
              "docs": {
                "contents": "I/O error, similar to `EIO` in POSIX."
              }
            },
            {
              "name": "is-directory",
              "docs": {
                "contents": "Is a directory, similar to `EISDIR` in POSIX."
              }
            },
            {
              "name": "loop",
              "docs": {
                "contents": "Too many levels of symbolic links, similar to `ELOOP` in POSIX."
              }
            },
            {
              "name": "too-many-links",
              "docs": {
                "contents": "Too many links, similar to `EMLINK` in POSIX."
              }
            },
            {
              "name": "message-size",
              "docs": {
                "contents": "Message too large, similar to `EMSGSIZE` in POSIX."
              }
            },
            {
              "name": "name-too-long",
              "docs": {
                "contents": "Filename too long, similar to `ENAMETOOLONG` in POSIX."
              }
            },
            {
              "name": "no-device",
              "docs": {
                "contents": "No such device, similar to `ENODEV` in POSIX."
              }
            },
            {
              "name": "no-entry",
              "docs": {
                "contents": "No such file or directory, similar to `ENOENT` in POSIX."
              }
            },
            {
              "name": "no-lock",
              "docs": {
                "contents": "No locks available, similar to `ENOLCK` in POSIX."
              }
            },
            {
              "name": "insufficient-memory",
              "docs": {
                "contents": "Not enough space, similar to `ENOMEM` in POSIX."
              }
            },
            {
              "name": "insufficient-space",
              "docs": {
                "contents": "No space left on device, similar to `ENOSPC` in POSIX."
              }
            },
            {
              "name": "not-directory",
              "docs": {
                "contents": "Not a directory or a symbolic link to a directory, similar to `ENOTDIR` in POSIX."
              }
            },
            {
              "name": "not-empty",
              "docs": {
                "contents": "Directory not empty, similar to `ENOTEMPTY` in POSIX."
              }
            },
            {
              "name": "not-recoverable",
              "docs": {
                "contents": "State not recoverable, similar to `ENOTRECOVERABLE` in POSIX."
              }
            },
            {
              "name": "unsupported",
              "docs": {
                "contents": "Not supported, similar to `ENOTSUP` and `ENOSYS` in POSIX."
              }
            },
            {
              "name": "no-tty",
              "docs": {
                "contents": "Inappropriate I/O control operation, similar to `ENOTTY` in POSIX."
              }
            },
            {
              "name": "no-such-device",
              "docs": {
                "contents": "No such device or address, similar to `ENXIO` in POSIX."
              }
            },
            {
              "name": "overflow",
              "docs": {
                "contents": "Value too large to be stored in data type, similar to `EOVERFLOW` in POSIX."
              }
            },
            {
              "name": "not-permitted",
              "docs": {
                "contents": "Operation not permitted, similar to `EPERM` in POSIX."
              }
            },
            {
              "name": "pipe",
              "docs": {
                "contents": "Broken pipe, similar to `EPIPE` in POSIX."
              }
            },
            {
              "name": "read-only",
              "docs": {
                "contents": "Read-only file system, similar to `EROFS` in POSIX."
              }
            },
            {
              "name": "invalid-seek",
              "docs": {
                "contents": "Invalid seek, similar to `ESPIPE` in POSIX."
              }
            },
            {
              "name": "text-file-busy",
              "docs": {
                "contents": "Text file busy, similar to `ETXTBSY` in POSIX."
              }
            },
            {
              "name": "cross-device",
              "docs": {
                "contents": "Cross-device link, similar to `EXDEV` in POSIX."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "Error codes returned by functions, similar to `errno` in POSIX.\nNot all of these error codes are returned by the functions provided by this\nAPI; some are used in higher-level library layers, and others are provided\nmerely for alignment with POSIX."
      }
    },
    {
      "name": "advice",
      "kind": {
        "enum": {
          "cases": [
            {
              "name": "normal",
              "docs": {
                "contents": "The application has no advice to give on its behavior with respect\nto the specified data."
              }
            },
            {
              "name": "sequential",
              "docs": {
                "contents": "The application expects to access the specified data sequentially\nfrom lower offsets to higher offsets."
              }
            },
            {
              "name": "random",
              "docs": {
                "contents": "The application expects to access the specified data in a random\norder."
              }
            },
            {
              "name": "will-need",
              "docs": {
                "contents": "The application expects to access the specified data in the near\nfuture."
              }
            },
            {
              "name": "dont-need",
              "docs": {
                "contents": "The application expects that it will not access the specified data\nin the near future."
              }
            },
            {
              "name": "no-reuse",
              "docs": {
                "contents": "The application expects to access the specified data once and then\nnot reuse it thereafter."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "File or memory access pattern advisory information."
      }
    },
    {
      "name": "metadata-hash-value",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "lower",
              "type": "u64",
              "docs": {
                "contents": "64 bits of a 128-bit hash value."
              }
            },
            {
              "name": "upper",
              "type": "u64",
              "docs": {
                "contents": "Another 64 bits of a 128-bit hash value."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "A 128-bit hash value, split into parts because wasm doesn't have a\n128-bit integer type."
      }
    },
    {
      "name": "descriptor",
      "kind": "resource",
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "A descriptor is a reference to a filesystem object, which may be a file,\ndirectory, named pipe, special file, or other object on which filesystem\ncalls may be made."
      }
    },
    {
      "name": "directory-entry-stream",
      "kind": "resource",
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "A stream of directory entries."
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 44
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 25
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 47,
          "err": 41
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 26
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 49,
          "err": 41
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": null,
          "err": 41
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 31,
          "err": 41
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 30,
          "err": 41
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": "u8"
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            54,
            "bool"
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 55,
          "err": 41
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 29,
          "err": 41
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 45
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 58,
          "err": 41
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 38,
          "err": 41
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 44
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 61,
          "err": 41
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": "string",
          "err": 41
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 43,
          "err": 41
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 45
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 40
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 66,
          "err": 41
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 27
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 41
      },
      "owner": null
    },
    {
      "name": "descriptor",
      "kind": {
        "type": 44
      },
      "owner": {
        "interface": 6
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 70
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            71,
            "string"
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": 72
      },
      "owner": null
    },
    {
      "name": "network",
      "kind": "resource",
      "owner": {
        "interface": 7
      },
      "docs": {
        "contents": "An opaque resource that represents access to (a subset of) the network.\nThis enables context-based security for networking.\nThere is no need for this to map 1:1 to a physical network interface."
      }
    },
    {
      "name": "error-code",
      "kind": {
        "enum": {
          "cases": [
            {
              "name": "unknown",
              "docs": {
                "contents": "Unknown error"
              }
            },
            {
              "name": "access-denied",
              "docs": {
                "contents": "Access denied.\n\nPOSIX equivalent: EACCES, EPERM"
              }
            },
            {
              "name": "not-supported",
              "docs": {
                "contents": "The operation is not supported.\n\nPOSIX equivalent: EOPNOTSUPP"
              }
            },
            {
              "name": "out-of-memory",
              "docs": {
                "contents": "Not enough memory to complete the operation.\n\nPOSIX equivalent: ENOMEM, ENOBUFS, EAI_MEMORY"
              }
            },
            {
              "name": "timeout",
              "docs": {
                "contents": "The operation timed out before it could finish completely."
              }
            },
            {
              "name": "concurrency-conflict",
              "docs": {
                "contents": "This operation is incompatible with another asynchronous operation that is already in progress."
              }
            },
            {
              "name": "not-in-progress",
              "docs": {
                "contents": "Trying to finish an asynchronous operation that:\n- has not been started yet, or:\n- was already finished by a previous `finish-*` call.\n\nNote: this is scheduled to be removed when `future`s are natively supported."
              }
            },
            {
              "name": "would-block",
              "docs": {
                "contents": "The operation has been aborted because it could not be completed immediately.\n\nNote: this is scheduled to be removed when `future`s are natively supported."
              }
            },
            {
              "name": "address-family-not-supported",
              "docs": {
                "contents": "The specified address-family is not supported."
              }
            },
            {
              "name": "address-family-mismatch",
              "docs": {
                "contents": "An IPv4 address was passed to an IPv6 resource, or vice versa."
              }
            },
            {
              "name": "invalid-remote-address",
              "docs": {
                "contents": "The socket address is not a valid remote address. E.g. the IP address is set to INADDR_ANY, or the port is set to 0."
              }
            },
            {
              "name": "ipv4-only-operation",
              "docs": {
                "contents": "The operation is only supported on IPv4 resources."
              }
            },
            {
              "name": "ipv6-only-operation",
              "docs": {
                "contents": "The operation is only supported on IPv6 resources."
              }
            },
            {
              "name": "new-socket-limit",
              "docs": {
                "contents": "A new socket resource could not be created because of a system limit."
              }
            },
            {
              "name": "already-attached",
              "docs": {
                "contents": "The socket is already attached to another network."
              }
            },
            {
              "name": "already-bound",
              "docs": {
                "contents": "The socket is already bound."
              }
            },
            {
              "name": "already-connected",
              "docs": {
                "contents": "The socket is already in the Connection state."
              }
            },
            {
              "name": "not-bound",
              "docs": {
                "contents": "The socket is not bound to any local address."
              }
            },
            {
              "name": "not-connected",
              "docs": {
                "contents": "The socket is not in the Connection state."
              }
            },
            {
              "name": "address-not-bindable",
              "docs": {
                "contents": "A bind operation failed because the provided address is not an address that the `network` can bind to."
              }
            },
            {
              "name": "address-in-use",
              "docs": {
                "contents": "A bind operation failed because the provided address is already in use."
              }
            },
            {
              "name": "ephemeral-ports-exhausted",
              "docs": {
                "contents": "A bind operation failed because there are no ephemeral ports available."
              }
            },
            {
              "name": "remote-unreachable",
              "docs": {
                "contents": "The remote address is not reachable"
              }
            },
            {
              "name": "already-listening",
              "docs": {
                "contents": "The socket is already in the Listener state."
              }
            },
            {
              "name": "not-listening",
              "docs": {
                "contents": "The socket is already in the Listener state."
              }
            },
            {
              "name": "connection-refused",
              "docs": {
                "contents": "The connection was forcefully rejected"
              }
            },
            {
              "name": "connection-reset",
              "docs": {
                "contents": "The connection was reset."
              }
            },
            {
              "name": "datagram-too-large"
            },
            {
              "name": "invalid-name",
              "docs": {
                "contents": "The provided name is a syntactically invalid domain name."
              }
            },
            {
              "name": "name-unresolvable",
              "docs": {
                "contents": "Name does not exist or has no suitable associated IP addresses."
              }
            },
            {
              "name": "temporary-resolver-failure",
              "docs": {
                "contents": "A temporary failure in name resolution occurred."
              }
            },
            {
              "name": "permanent-resolver-failure",
              "docs": {
                "contents": "A permanent failure in name resolution occurred."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 7
      },
      "docs": {
        "contents": "Error codes.\n\nIn theory, every API can return any error code.\nIn practice, API's typically only return the errors documented per API\ncombined with a couple of errors that are always possible:\n- `unknown`\n- `access-denied`\n- `not-supported`\n- `out-of-memory`\n\nSee each individual API for what the POSIX equivalents are. They sometimes differ per API."
      }
    },
    {
      "name": "ip-address-family",
      "kind": {
        "enum": {
          "cases": [
            {
              "name": "ipv4",
              "docs": {
                "contents": "Similar to `AF_INET` in POSIX."
              }
            },
            {
              "name": "ipv6",
              "docs": {
                "contents": "Similar to `AF_INET6` in POSIX."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 7
      }
    },
    {
      "name": "ipv4-address",
      "kind": {
        "tuple": {
          "types": [
            "u8",
            "u8",
            "u8",
            "u8"
          ]
        }
      },
      "owner": {
        "interface": 7
      }
    },
    {
      "name": "ipv6-address",
      "kind": {
        "tuple": {
          "types": [
            "u16",
            "u16",
            "u16",
            "u16",
            "u16",
            "u16",
            "u16",
            "u16"
          ]
        }
      },
      "owner": {
        "interface": 7
      }
    },
    {
      "name": "ip-address",
      "kind": {
        "variant": {
          "cases": [
            {
              "name": "ipv4",
              "type": 77
            },
            {
              "name": "ipv6",
              "type": 78
            }
          ]
        }
      },
      "owner": {
        "interface": 7
      }
    },
    {
      "name": "ipv4-socket-address",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "port",
              "type": "u16"
            },
            {
              "name": "address",
              "type": 77
            }
          ]
        }
      },
      "owner": {
        "interface": 7
      }
    },
    {
      "name": "ipv6-socket-address",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "port",
              "type": "u16"
            },
            {
              "name": "flow-info",
              "type": "u32"
            },
            {
              "name": "address",
              "type": 78
            },
            {
              "name": "scope-id",
              "type": "u32"
            }
          ]
        }
      },
      "owner": {
        "interface": 7
      }
    },
    {
      "name": "ip-socket-address",
      "kind": {
        "variant": {
          "cases": [
            {
              "name": "ipv4",
              "type": 80
            },
            {
              "name": "ipv6",
              "type": 81
            }
          ]
        }
      },
      "owner": {
        "interface": 7
      }
    },
    {
      "name": "network",
      "kind": {
        "type": 74
      },
      "owner": {
        "interface": 8
      }
    },
    {
      "name": "pollable",
      "kind": {
        "type": 0
      },
      "owner": {
        "interface": 9
      }
    },
    {
      "name": "network",
      "kind": {
        "type": 74
      },
      "owner": {
        "interface": 9
      }
    },
    {
      "name": "error-code",
      "kind": {
        "type": 75
      },
      "owner": {
        "interface": 9
      }
    },
    {
      "name": "ip-address",
      "kind": {
        "type": 79
      },
      "owner": {
        "interface": 9
      }
    },
    {
      "name": "ip-address-family",
      "kind": {
        "type": 76
      },
      "owner": {
        "interface": 9
      }
    },
    {
      "name": "resolve-address-stream",
      "kind": "resource",
      "owner": {
        "interface": 9
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 85
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 88
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 89
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 92,
          "err": 86
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 89
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 87
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 95,
          "err": 86
        }
      },
      "owner": null
    },
    {
      "name": "input-stream",
      "kind": {
        "type": 8
      },
      "owner": {
        "interface": 10
      }
    },
    {
      "name": "output-stream",
      "kind": {
        "type": 9
      },
      "owner": {
        "interface": 10
      }
    },
    {
      "name": "pollable",
      "kind": {
        "type": 0
      },
      "owner": {
        "interface": 10
      }
    },
    {
      "name": "network",
      "kind": {
        "type": 74
      },
      "owner": {
        "interface": 10
      }
    },
    {
      "name": "error-code",
      "kind": {
        "type": 75
      },
      "owner": {
        "interface": 10
      }
    },
    {
      "name": "ip-socket-address",
      "kind": {
        "type": 82
      },
      "owner": {
        "interface": 10
      }
    },
    {
      "name": "ip-address-family",
      "kind": {
        "type": 76
      },
      "owner": {
        "interface": 10
      }
    },
    {
      "name": "shutdown-type",
      "kind": {
        "enum": {
          "cases": [
            {
              "name": "receive",
              "docs": {
                "contents": "Similar to `SHUT_RD` in POSIX."
              }
            },
            {
              "name": "send",
              "docs": {
                "contents": "Similar to `SHUT_WR` in POSIX."
              }
            },
            {
              "name": "both",
              "docs": {
                "contents": "Similar to `SHUT_RDWR` in POSIX."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 10
      }
    },
    {
      "name": "tcp-socket",
      "kind": "resource",
      "owner": {
        "interface": 10
      },
      "docs": {
        "contents": "A TCP socket handle."
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 105
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 100
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": null,
          "err": 101
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 97
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 98
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            109,
            110
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 111,
          "err": 101
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 105
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            113,
            109,
            110
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 114,
          "err": 101
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 102,
          "err": 101
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": "bool",
          "err": 101
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": "u8",
          "err": 101
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": "u64",
          "err": 101
        }
      },
      "owner": null
    },
    {
      "name": "network",
      "kind": {
        "type": 74
      },
      "owner": {
        "interface": 11
      }
    },
    {
      "name": "error-code",
      "kind": {
        "type": 75
      },
      "owner": {
        "interface": 11
      }
    },
    {
      "name": "ip-address-family",
      "kind": {
        "type": 76
      },
      "owner": {
        "interface": 11
      }
    },
    {
      "name": "tcp-socket",
      "kind": {
        "type": 105
      },
      "owner": {
        "interface": 11
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 123
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 124,
          "err": 121
        }
      },
      "owner": null
    },
    {
      "name": "pollable",
      "kind": {
        "type": 0
      },
      "owner": {
        "interface": 12
      }
    },
    {
      "name": "network",
      "kind": {
        "type": 74
      },
      "owner": {
        "interface": 12
      }
    },
    {
      "name": "error-code",
      "kind": {
        "type": 75
      },
      "owner": {
        "interface": 12
      }
    },
    {
      "name": "ip-socket-address",
      "kind": {
        "type": 82
      },
      "owner": {
        "interface": 12
      }
    },
    {
      "name": "ip-address-family",
      "kind": {
        "type": 76
      },
      "owner": {
        "interface": 12
      }
    },
    {
      "name": null,
      "kind": {
        "list": "u8"
      },
      "owner": null
    },
    {
      "name": "datagram",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "data",
              "type": 131
            },
            {
              "name": "remote-address",
              "type": 129
            }
          ]
        }
      },
      "owner": {
        "interface": 12
      }
    },
    {
      "name": "udp-socket",
      "kind": "resource",
      "owner": {
        "interface": 12
      },
      "docs": {
        "contents": "A UDP socket handle."
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 133
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 127
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": null,
          "err": 128
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": 132
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 137,
          "err": 128
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": "u64",
          "err": 128
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 129,
          "err": 128
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": "bool",
          "err": 128
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": "u8",
          "err": 128
        }
      },
      "owner": null
    },
    {
      "name": "network",
      "kind": {
        "type": 74
      },
      "owner": {
        "interface": 13
      }
    },
    {
      "name": "error-code",
      "kind": {
        "type": 75
      },
      "owner": {
        "interface": 13
      }
    },
    {
      "name": "ip-address-family",
      "kind": {
        "type": 76
      },
      "owner": {
        "interface": 13
      }
    },
    {
      "name": "udp-socket",
      "kind": {
        "type": 133
      },
      "owner": {
        "interface": 13
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 146
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 147,
          "err": 144
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 83
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 84
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 99
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 126
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            "u64",
            "u64"
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": "u8"
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            "string",
            "string"
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": 155
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": "string"
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": "string"
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": null,
          "err": null
        }
      },
      "owner": null
    },
    {
      "name": "input-stream",
      "kind": {
        "type": 8
      },
      "owner": {
        "interface": 20
      }
    },
    {
      "name": "output-stream",
      "kind": {
        "type": 9
      },
      "owner": {
        "interface": 21
      }
    },
    {
      "name": "output-stream",
      "kind": {
        "type": 9
      },
      "owner": {
        "interface": 22
      }
    },
    {
      "name": "terminal-input",
      "kind": "resource",
      "owner": {
        "interface": 23
      },
      "docs": {
        "contents": "The input side of a terminal."
      }
    },
    {
      "name": "terminal-output",
      "kind": "resource",
      "owner": {
        "interface": 24
      },
      "docs": {
        "contents": "The output side of a terminal."
      }
    },
    {
      "name": "terminal-input",
      "kind": {
        "type": 163
      },
      "owner": {
        "interface": 25
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 165
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 166
      },
      "owner": null
    },
    {
      "name": "terminal-output",
      "kind": {
        "type": 164
      },
      "owner": {
        "interface": 26
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 168
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 169
      },
      "owner": null
    },
    {
      "name": "terminal-output",
      "kind": {
        "type": 164
      },
      "owner": {
        "interface": 27
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 171
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 172
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 160
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 161
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 162
        }
      },
      "owner": null
    },
    {
      "name": "input-stream",
      "kind": {
        "type": 8
      },
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "output-stream",
      "kind": {
        "type": 9
      },
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "pollable",
      "kind": {
        "type": 0
      },
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "method",
      "kind": {
        "variant": {
          "cases": [
            {
              "name": "get",
              "type": null
            },
            {
              "name": "head",
              "type": null
            },
            {
              "name": "post",
              "type": null
            },
            {
              "name": "put",
              "type": null
            },
            {
              "name": "delete",
              "type": null
            },
            {
              "name": "connect",
              "type": null
            },
            {
              "name": "options",
              "type": null
            },
            {
              "name": "trace",
              "type": null
            },
            {
              "name": "patch",
              "type": null
            },
            {
              "name": "other",
              "type": "string"
            }
          ]
        }
      },
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "scheme",
      "kind": {
        "variant": {
          "cases": [
            {
              "name": "HTTP",
              "type": null
            },
            {
              "name": "HTTPS",
              "type": null
            },
            {
              "name": "other",
              "type": "string"
            }
          ]
        }
      },
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "error",
      "kind": {
        "variant": {
          "cases": [
            {
              "name": "invalid-url",
              "type": "string"
            },
            {
              "name": "timeout-error",
              "type": "string"
            },
            {
              "name": "protocol-error",
              "type": "string"
            },
            {
              "name": "unexpected-error",
              "type": "string"
            }
          ]
        }
      },
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "fields",
      "kind": "resource",
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "headers",
      "kind": {
        "type": 183
      },
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "trailers",
      "kind": {
        "type": 183
      },
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "incoming-request",
      "kind": "resource",
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "outgoing-request",
      "kind": "resource",
      "owner": {
        "interface": 28
      }
    },
    {
      "name": null,
      "kind": {
        "option": "u32"
      },
      "owner": null
    },
    {
      "name": "request-options",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "connect-timeout-ms",
              "type": 188
            },
            {
              "name": "first-byte-timeout-ms",
              "type": 188
            },
            {
              "name": "between-bytes-timeout-ms",
              "type": 188
            }
          ]
        }
      },
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "response-outparam",
      "kind": "resource",
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "status-code",
      "kind": {
        "type": "u16"
      },
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "incoming-response",
      "kind": "resource",
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "incoming-body",
      "kind": "resource",
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "future-trailers",
      "kind": "resource",
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "outgoing-response",
      "kind": "resource",
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "outgoing-body",
      "kind": "resource",
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "future-incoming-response",
      "kind": "resource",
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "The following block defines a special resource type used by the\n`wasi:http/outgoing-handler` interface to emulate\n`future<result<response, error>>` in advance of Preview3. Given a\n`future-incoming-response`, the client can call the non-blocking `get`\nmethod to get the result if it is available. If the result is not available,\nthe client can call `listen` to get a `pollable` that can be passed to\n`wasi:io/poll.poll-list`."
      }
    },
    {
      "name": null,
      "kind": {
        "list": "u8"
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            "string",
            198
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": 199
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 183
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": 198
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 186
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": "string"
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 181
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 193
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 206,
          "err": null
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 184
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 187
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 196
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 210,
          "err": null
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 195
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 212,
          "err": 182
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 192
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 193
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 177
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 216,
          "err": null
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 194
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 185
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 219,
          "err": 182
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 220
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 195
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 196
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 178
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 224,
          "err": null
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 219
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 197
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 192
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 228,
          "err": 182
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 229,
          "err": null
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 230
      },
      "owner": null
    },
    {
      "name": "incoming-request",
      "kind": {
        "type": 186
      },
      "owner": {
        "interface": 29
      }
    },
    {
      "name": "response-outparam",
      "kind": {
        "type": 190
      },
      "owner": {
        "interface": 29
      }
    },
    {
      "name": "outgoing-request",
      "kind": {
        "type": 187
      },
      "owner": {
        "interface": 30
      }
    },
    {
      "name": "request-options",
      "kind": {
        "type": 189
      },
      "owner": {
        "interface": 30
      }
    },
    {
      "name": "future-incoming-response",
      "kind": {
        "type": 197
      },
      "owner": {
        "interface": 30
      }
    },
    {
      "name": "error",
      "kind": {
        "type": 182
      },
      "owner": {
        "interface": 30
      }
    },
    {
      "name": null,
      "kind": {
        "option": 235
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 236
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 239,
          "err": 237
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 183
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 184
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 187
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 190
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 194
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 179
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 232
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 233
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 234
        }
      },
      "owner": null
    },
    {
      "name": "level",
      "kind": {
        "enum": {
          "cases": [
            {
              "name": "trace",
              "docs": {
                "contents": "Describes messages about the values of variables and the flow of\ncontrol within a program."
              }
            },
            {
              "name": "debug",
              "docs": {
                "contents": "Describes messages likely to be of interest to someone debugging a\nprogram."
              }
            },
            {
              "name": "info",
              "docs": {
                "contents": "Describes messages likely to be of interest to someone monitoring a\nprogram."
              }
            },
            {
              "name": "warn",
              "docs": {
                "contents": "Describes messages indicating hazardous situations."
              }
            },
            {
              "name": "error",
              "docs": {
                "contents": "Describes messages indicating serious errors."
              }
            },
            {
              "name": "critical",
              "docs": {
                "contents": "Describes messages indicating fatal errors."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 31
      },
      "docs": {
        "contents": "A log level, describing a kind of message."
      }
    },
    {
      "name": "output-stream",
      "kind": {
        "type": 9
      },
      "owner": {
        "world": 11
      }
    },
    {
      "name": "descriptor-stat",
      "kind": {
        "type": 38
      },
      "owner": {
        "world": 11
      }
    },
    {
      "name": null,
      "kind": {
        "list": "string"
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": null,
          "err": null
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 251
        }
      },
      "owner": null
    }
  ],
  "packages": [
    {
      "name": "wasi:io",
      "interfaces": {
        "poll": 0,
        "streams": 1
      },
      "worlds": {
        "imports": 0
      }
    },
    {
      "name": "wasi:clocks",
      "interfaces": {
        "monotonic-clock": 2,
        "wall-clock": 3,
        "timezone": 4
      },
      "worlds": {
        "imports": 1
      }
    },
    {
      "name": "wasi:filesystem",
      "interfaces": {
        "types": 5,
        "preopens": 6
      },
      "worlds": {
        "imports": 2
      }
    },
    {
      "name": "wasi:sockets",
      "interfaces": {
        "network": 7,
        "instance-network": 8,
        "ip-name-lookup": 9,
        "tcp": 10,
        "tcp-create-socket": 11,
        "udp": 12,
        "udp-create-socket": 13
      },
      "worlds": {
        "imports": 3
      }
    },
    {
      "name": "wasi:random",
      "interfaces": {
        "insecure-seed": 14,
        "insecure": 15,
        "random": 16
      },
      "worlds": {
        "imports": 4
      }
    },
    {
      "name": "wasi:cli",
      "interfaces": {
        "environment": 17,
        "exit": 18,
        "run": 19,
        "stdin": 20,
        "stdout": 21,
        "stderr": 22,
        "terminal-input": 23,
        "terminal-output": 24,
        "terminal-stdin": 25,
        "terminal-stdout": 26,
        "terminal-stderr": 27
      },
      "worlds": {
        "reactor": 5,
        "command": 6
      }
    },
    {
      "name": "wasi:http",
      "interfaces": {
        "types": 28,
        "incoming-handler": 29,
        "outgoing-handler": 30
      },
      "worlds": {
        "proxy": 7
      }
    },
    {
      "name": "wasi:logging",
      "interfaces": {
        "logging": 31
      },
      "worlds": {
        "imports": 8
      }
    },
    {
      "name": "wasmtime:wasi",
      "interfaces": {},
      "worlds": {
        "command-extended": 9,
        "preview1-adapter-reactor": 10,
        "test-reactor": 11,
        "test-command": 12,
        "test-command-with-sockets": 13
      }
    }
  ]
}